{
  "version": 3,
  "sources": ["../../../../../packages/core/admin/ee/admin/src/pages/SettingsPage/pages/Users/components/MagicLinkEE.tsx"],
  "sourcesContent": ["import { useIntl } from 'react-intl';\n\nimport { getBasename } from '../../../../../../../../admin/src/core/utils/basename';\nimport { MagicLinkWrapper } from '../../../../../../../../admin/src/pages/Settings/pages/Users/components/MagicLinkWrapper';\n\nimport type { MagicLinkCEProps } from '../../../../../../../../admin/src/pages/Settings/pages/Users/components/MagicLinkCE';\n\n// FIXME replace with parts compo when ready\nexport const MagicLinkEE = ({ registrationToken }: MagicLinkCEProps) => {\n  const { formatMessage } = useIntl();\n\n  if (registrationToken) {\n    return (\n      <MagicLinkWrapper\n        target={`${\n          window.location.origin\n        }${getBasename()}/auth/register?registrationToken=${registrationToken}`}\n      >\n        {formatMessage({\n          id: 'app.components.Users.MagicLink.connect',\n          defaultMessage: 'Copy and share this link to give access to this user',\n        })}\n      </MagicLinkWrapper>\n    );\n  }\n\n  return (\n    <MagicLinkWrapper target={`${window.location.origin}${getBasename()}/auth/login`}>\n      {formatMessage({\n        id: 'app.components.Users.MagicLink.connect.sso',\n        defaultMessage:\n          'Send this link to the user, the first login can be made via a SSO provider.',\n      })}\n    </MagicLinkWrapper>\n  );\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAaM;AALC,IAAM,cAAc,CAAC,EAAE,kBAAkB,MAAwB;AACtE,QAAM,EAAE,cAAc,IAAI,QAAQ;AAElC,MAAI,mBAAmB;AACrB,eACE;AAAA,MAAC;AAAA;AAAA,QACC,QAAQ,GACN,OAAO,SAAS,MAClB,GAAG,YAAY,CAAC,oCAAoC,iBAAiB;AAAA,QAEpE,wBAAc;AAAA,UACb,IAAI;AAAA,UACJ,gBAAgB;AAAA,QAClB,CAAC;AAAA;AAAA,IACH;AAAA,EAEJ;AAEA,aACE,wBAAC,oBAAiB,QAAQ,GAAG,OAAO,SAAS,MAAM,GAAG,YAAY,CAAC,eAChE,wBAAc;AAAA,IACb,IAAI;AAAA,IACJ,gBACE;AAAA,EACJ,CAAC,GACH;AAEJ;",
  "names": []
}
