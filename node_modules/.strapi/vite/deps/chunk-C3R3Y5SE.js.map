{
  "version": 3,
  "sources": ["../../../../../packages/core/admin/ee/admin/src/hooks/useLicenseLimitNotification.ts"],
  "sourcesContent": ["/**\n *\n * useLicenseLimitNotification\n *\n */\nimport * as React from 'react';\n\nimport isNil from 'lodash/isNil';\nimport { useIntl } from 'react-intl';\nimport { useLocation } from 'react-router-dom';\n\nimport { NotificationConfig, useNotification } from '../../../../admin/src/features/Notifications';\n\nimport { useLicenseLimits } from './useLicenseLimits';\n\nconst STORAGE_KEY_PREFIX = 'strapi-notification-seat-limit';\n\nconst BILLING_SELF_HOSTED_URL = 'https://strapi.io/billing/request-seats';\nconst MANAGE_SEATS_URL = 'https://strapi.io/billing/manage-seats';\n\nexport const useLicenseLimitNotification = () => {\n  const { formatMessage } = useIntl();\n  const { license, isError, isLoading } = useLicenseLimits();\n  const { toggleNotification } = useNotification();\n  const { pathname } = useLocation();\n\n  const { enforcementUserCount, permittedSeats, licenseLimitStatus, type } = license ?? {};\n\n  React.useEffect(() => {\n    if (isError || isLoading) {\n      return;\n    }\n\n    const shouldDisplayNotification =\n      !isNil(permittedSeats) &&\n      !window.sessionStorage.getItem(`${STORAGE_KEY_PREFIX}-${pathname}`) &&\n      licenseLimitStatus === 'OVER_LIMIT';\n\n    let notificationType: NotificationConfig['type'];\n\n    if (licenseLimitStatus === 'OVER_LIMIT') {\n      notificationType = 'danger';\n    }\n\n    if (shouldDisplayNotification) {\n      toggleNotification({\n        type: notificationType,\n        message: formatMessage(\n          {\n            id: 'notification.ee.warning.over-.message',\n            defaultMessage:\n              \"Add seats to {licenseLimitStatus, select, OVER_LIMIT {invite} other {re-enable}} Users. If you already did it but it's not reflected in Strapi yet, make sure to restart your app.\",\n          },\n          { licenseLimitStatus }\n        ),\n        title: formatMessage(\n          {\n            id: 'notification.ee.warning.at-seat-limit.title',\n            defaultMessage:\n              '{licenseLimitStatus, select, OVER_LIMIT {Over} other {At}} seat limit ({enforcementUserCount}/{permittedSeats})',\n          },\n          {\n            licenseLimitStatus,\n            enforcementUserCount,\n            permittedSeats,\n          }\n        ),\n        link: {\n          url: type === 'gold' ? BILLING_SELF_HOSTED_URL : MANAGE_SEATS_URL,\n          label: formatMessage({\n            id: 'notification.ee.warning.seat-limit.link',\n            defaultMessage: type === 'gold' ? 'Contact sales' : 'Manage seats',\n          }),\n        },\n        blockTransition: true,\n        onClose() {\n          window.sessionStorage.setItem(`${STORAGE_KEY_PREFIX}-${pathname}`, 'true');\n        },\n      });\n    }\n  }, [\n    toggleNotification,\n    license,\n    pathname,\n    formatMessage,\n    isLoading,\n    permittedSeats,\n    licenseLimitStatus,\n    enforcementUserCount,\n    isError,\n    type,\n  ]);\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAKA,YAAuB;AAEvB,mBAAkB;AAQlB,IAAM,qBAAqB;AAE3B,IAAM,0BAA0B;AAChC,IAAM,mBAAmB;AAElB,IAAM,8BAA8B,MAAM;AAC/C,QAAM,EAAE,cAAc,IAAI,QAAQ;AAClC,QAAM,EAAE,SAAS,SAAS,UAAU,IAAI,iBAAiB;AACzD,QAAM,EAAE,mBAAmB,IAAI,gBAAgB;AAC/C,QAAM,EAAE,SAAS,IAAI,YAAY;AAEjC,QAAM,EAAE,sBAAsB,gBAAgB,oBAAoB,KAAK,IAAI,WAAW,CAAC;AAEvF,EAAM,gBAAU,MAAM;AACpB,QAAI,WAAW,WAAW;AACxB;AAAA,IACF;AAEA,UAAM,4BACJ,KAAC,aAAAA,SAAM,cAAc,KACrB,CAAC,OAAO,eAAe,QAAQ,GAAG,kBAAkB,IAAI,QAAQ,EAAE,KAClE,uBAAuB;AAEzB,QAAI;AAEJ,QAAI,uBAAuB,cAAc;AACvC,yBAAmB;AAAA,IACrB;AAEA,QAAI,2BAA2B;AAC7B,yBAAmB;AAAA,QACjB,MAAM;AAAA,QACN,SAAS;AAAA,UACP;AAAA,YACE,IAAI;AAAA,YACJ,gBACE;AAAA,UACJ;AAAA,UACA,EAAE,mBAAmB;AAAA,QACvB;AAAA,QACA,OAAO;AAAA,UACL;AAAA,YACE,IAAI;AAAA,YACJ,gBACE;AAAA,UACJ;AAAA,UACA;AAAA,YACE;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAAA,QACA,MAAM;AAAA,UACJ,KAAK,SAAS,SAAS,0BAA0B;AAAA,UACjD,OAAO,cAAc;AAAA,YACnB,IAAI;AAAA,YACJ,gBAAgB,SAAS,SAAS,kBAAkB;AAAA,UACtD,CAAC;AAAA,QACH;AAAA,QACA,iBAAiB;AAAA,QACjB,UAAU;AACR,iBAAO,eAAe,QAAQ,GAAG,kBAAkB,IAAI,QAAQ,IAAI,MAAM;AAAA,QAC3E;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,GAAG;AAAA,IACD;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACH;",
  "names": ["isNil"]
}
