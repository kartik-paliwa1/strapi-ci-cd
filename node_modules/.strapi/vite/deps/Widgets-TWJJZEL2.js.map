{
  "version": 3,
  "sources": ["../../../../../packages/core/review-workflows/admin/src/components/Widgets.tsx"],
  "sourcesContent": ["import { Widget, useTracking } from '@strapi/admin/strapi-admin';\nimport { DocumentStatus, RelativeTime } from '@strapi/content-manager/strapi-admin';\nimport { Box, IconButton, Table, Tbody, Td, Tr, Typography } from '@strapi/design-system';\nimport { Pencil } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { StageColumn } from '../routes/content-manager/model/components/TableColumns';\nimport { useGetRecentlyAssignedDocumentsQuery } from '../services/content-manager';\n\nimport type { RecentDocument } from '../../../shared/contracts/homepage';\n\nconst CellTypography = styled(Typography)`\n  display: block;\n  max-width: 14.4rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nconst RecentDocumentsTable = ({\n  documents,\n  type,\n}: {\n  documents: RecentDocument[];\n  type: 'assigned';\n}) => {\n  const { formatMessage } = useIntl();\n  const { trackUsage } = useTracking();\n  const navigate = useNavigate();\n\n  const getEditViewLink = (document: RecentDocument): string => {\n    const isSingleType = document.kind === 'singleType';\n    const kindPath = isSingleType ? 'single-types' : 'collection-types';\n    const queryParams = document.locale ? `?plugins[i18n][locale]=${document.locale}` : '';\n\n    return `/content-manager/${kindPath}/${document.contentTypeUid}${isSingleType ? '' : '/' + document.documentId}${queryParams}`;\n  };\n\n  const handleRowClick = (document: RecentDocument) => () => {\n    trackUsage('willEditEntryFromHome', { entryType: type });\n    const link = getEditViewLink(document);\n    navigate(link);\n  };\n\n  return (\n    <Table colCount={6} rowCount={documents?.length ?? 0}>\n      <Tbody>\n        {documents?.map((document) => (\n          <Tr onClick={handleRowClick(document)} cursor=\"pointer\" key={document.documentId}>\n            <Td>\n              <CellTypography title={document.title} variant=\"omega\" textColor=\"neutral800\">\n                {document.title}\n              </CellTypography>\n            </Td>\n            <Td>\n              <CellTypography variant=\"omega\" textColor=\"neutral600\">\n                {document.kind === 'singleType'\n                  ? formatMessage({\n                      id: 'content-manager.widget.last-edited.single-type',\n                      defaultMessage: 'Single-Type',\n                    })\n                  : formatMessage({\n                      id: document.contentTypeDisplayName,\n                      defaultMessage: document.contentTypeDisplayName,\n                    })}\n              </CellTypography>\n            </Td>\n            <Td>\n              <Box display=\"inline-block\">\n                {document.status ? (\n                  <DocumentStatus status={document.status} />\n                ) : (\n                  <Typography textColor=\"neutral600\" aria-hidden>\n                    -\n                  </Typography>\n                )}\n              </Box>\n            </Td>\n            <Td>\n              <Typography textColor=\"neutral600\">\n                <RelativeTime timestamp={new Date(document.updatedAt)} />\n              </Typography>\n            </Td>\n            <Td>\n              <StageColumn strapi_stage={document.strapi_stage} />\n            </Td>\n            <Td onClick={(e) => e.stopPropagation()}>\n              <Box display=\"inline-block\">\n                <IconButton\n                  tag={Link}\n                  to={getEditViewLink(document)}\n                  onClick={() => trackUsage('willEditEntryFromHome', { entryType: type })}\n                  label={formatMessage({\n                    id: 'content-manager.actions.edit.label',\n                    defaultMessage: 'Edit',\n                  })}\n                  variant=\"ghost\"\n                >\n                  <Pencil />\n                </IconButton>\n              </Box>\n            </Td>\n          </Tr>\n        ))}\n      </Tbody>\n    </Table>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * AssignedWidget\n * -----------------------------------------------------------------------------------------------*/\n\nconst AssignedWidget = () => {\n  const { formatMessage } = useIntl();\n  const { data, isLoading, error } = useGetRecentlyAssignedDocumentsQuery();\n\n  if (isLoading) {\n    return <Widget.Loading />;\n  }\n\n  if (error || !data) {\n    return <Widget.Error />;\n  }\n\n  if (data.length === 0) {\n    return (\n      <Widget.NoData>\n        {formatMessage({\n          id: 'review-workflows.widget.assigned.no-data',\n          defaultMessage: 'No entries',\n        })}\n      </Widget.NoData>\n    );\n  }\n\n  return <RecentDocumentsTable documents={data} type=\"assigned\" />;\n};\n\nexport { AssignedWidget };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDU;AArCV,IAAM,iBAAiB,GAAO,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQxC,IAAM,uBAAuB,CAAC;AAAA,EAC5B;AAAA,EACA;AACF,MAGM;AACJ,QAAM,EAAE,cAAc,IAAI,QAAQ;AAClC,QAAM,EAAE,WAAW,IAAI,YAAY;AACnC,QAAM,WAAW,YAAY;AAE7B,QAAM,kBAAkB,CAAC,aAAqC;AAC5D,UAAM,eAAe,SAAS,SAAS;AACvC,UAAM,WAAW,eAAe,iBAAiB;AACjD,UAAM,cAAc,SAAS,SAAS,0BAA0B,SAAS,MAAM,KAAK;AAEpF,WAAO,oBAAoB,QAAQ,IAAI,SAAS,cAAc,GAAG,eAAe,KAAK,MAAM,SAAS,UAAU,GAAG,WAAW;AAAA,EAC9H;AAEA,QAAM,iBAAiB,CAAC,aAA6B,MAAM;AACzD,eAAW,yBAAyB,EAAE,WAAW,KAAK,CAAC;AACvD,UAAM,OAAO,gBAAgB,QAAQ;AACrC,aAAS,IAAI;AAAA,EACf;AAEA,aACE,wBAAC,SAAM,UAAU,GAAG,WAAU,uCAAW,WAAU,GACjD,sCAAC,SACE,iDAAW,IAAI,CAAC,iBACf,yBAAC,MAAG,SAAS,eAAe,QAAQ,GAAG,QAAO,WAC5C;AAAA,gCAAC,MACC,sCAAC,kBAAe,OAAO,SAAS,OAAO,SAAQ,SAAQ,WAAU,cAC9D,mBAAS,OACZ,GACF;AAAA,QACA,wBAAC,MACC,sCAAC,kBAAe,SAAQ,SAAQ,WAAU,cACvC,mBAAS,SAAS,eACf,cAAc;AAAA,MACZ,IAAI;AAAA,MACJ,gBAAgB;AAAA,IAClB,CAAC,IACD,cAAc;AAAA,MACZ,IAAI,SAAS;AAAA,MACb,gBAAgB,SAAS;AAAA,IAC3B,CAAC,GACP,GACF;AAAA,QACA,wBAAC,MACC,sCAAC,OAAI,SAAQ,gBACV,mBAAS,aACR,wBAAC,kBAAe,QAAQ,SAAS,QAAQ,QAEzC,wBAAC,cAAW,WAAU,cAAa,eAAW,MAAC,eAE/C,GAEJ,GACF;AAAA,QACA,wBAAC,MACC,sCAAC,cAAW,WAAU,cACpB,sCAAC,gBAAa,WAAW,IAAI,KAAK,SAAS,SAAS,GAAG,GACzD,GACF;AAAA,QACA,wBAAC,MACC,sCAAC,eAAY,cAAc,SAAS,cAAc,GACpD;AAAA,QACA,wBAAC,MAAG,SAAS,CAAC,MAAM,EAAE,gBAAgB,GACpC,sCAAC,OAAI,SAAQ,gBACX;AAAA,MAAC;AAAA;AAAA,QACC,KAAK;AAAA,QACL,IAAI,gBAAgB,QAAQ;AAAA,QAC5B,SAAS,MAAM,WAAW,yBAAyB,EAAE,WAAW,KAAK,CAAC;AAAA,QACtE,OAAO,cAAc;AAAA,UACnB,IAAI;AAAA,UACJ,gBAAgB;AAAA,QAClB,CAAC;AAAA,QACD,SAAQ;AAAA,QAER,sCAAC,iBAAO;AAAA;AAAA,IACV,GACF,GACF;AAAA,OArD2D,SAAS,UAsDtE,IAEJ,GACF;AAEJ;AAMA,IAAM,iBAAiB,MAAM;AAC3B,QAAM,EAAE,cAAc,IAAI,QAAQ;AAClC,QAAM,EAAE,MAAM,WAAW,MAAM,IAAI,qCAAqC;AAExE,MAAI,WAAW;AACb,eAAO,wBAAC,OAAO,SAAP,EAAe;AAAA,EACzB;AAEA,MAAI,SAAS,CAAC,MAAM;AAClB,eAAO,wBAAC,OAAO,OAAP,EAAa;AAAA,EACvB;AAEA,MAAI,KAAK,WAAW,GAAG;AACrB,eACE,wBAAC,OAAO,QAAP,EACE,wBAAc;AAAA,MACb,IAAI;AAAA,MACJ,gBAAgB;AAAA,IAClB,CAAC,GACH;AAAA,EAEJ;AAEA,aAAO,wBAAC,wBAAqB,WAAW,MAAM,MAAK,YAAW;AAChE;",
  "names": []
}
