import {
  adminApi
} from "./chunk-ZOFH3G6M.js";

// ../packages/plugins/i18n/admin/src/pluginId.ts
var pluginId = "i18n";

// ../packages/plugins/i18n/admin/src/utils/getTranslation.ts
var getTranslation = (id) => `${pluginId}.${id}`;

// ../packages/plugins/i18n/admin/src/services/api.ts
var i18nApi = adminApi.enhanceEndpoints({
  addTagTypes: ["Locale", "KeyStatistics"]
});

// ../packages/plugins/i18n/admin/src/services/locales.ts
var localesApi = i18nApi.injectEndpoints({
  endpoints: (builder) => ({
    createLocale: builder.mutation({
      query: (data) => ({
        url: "/i18n/locales",
        method: "POST",
        data
      }),
      invalidatesTags: [{ type: "Locale", id: "LIST" }, "HomepageKeyStatistics"]
    }),
    deleteLocale: builder.mutation({
      query: (id) => ({
        url: `/i18n/locales/${id}`,
        method: "DELETE"
      }),
      invalidatesTags: (result, error, id) => [{ type: "Locale", id }, "HomepageKeyStatistics"]
    }),
    getLocales: builder.query({
      query: () => "/i18n/locales",
      providesTags: (res) => [
        { type: "Locale", id: "LIST" },
        ...Array.isArray(res) ? res.map((locale) => ({
          type: "Locale",
          id: locale.id
        })) : []
      ]
    }),
    getDefaultLocales: builder.query({
      query: () => "/i18n/iso-locales"
    }),
    updateLocale: builder.mutation({
      query: ({ id, ...data }) => ({
        url: `/i18n/locales/${id}`,
        method: "PUT",
        data
      }),
      invalidatesTags: (result, error, { id }) => [{ type: "Locale", id }]
    })
  })
});
var {
  useCreateLocaleMutation,
  useDeleteLocaleMutation,
  useGetLocalesQuery,
  useGetDefaultLocalesQuery,
  useUpdateLocaleMutation
} = localesApi;

// ../packages/plugins/i18n/admin/src/constants.ts
var PERMISSIONS = {
  accessMain: [{ action: "plugin::i18n.locale.read", subject: null }],
  create: [{ action: "plugin::i18n.locale.create", subject: null }],
  delete: [{ action: "plugin::i18n.locale.delete", subject: null }],
  update: [{ action: "plugin::i18n.locale.update", subject: null }],
  read: [{ action: "plugin::i18n.locale.read", subject: null }]
};

export {
  pluginId,
  getTranslation,
  i18nApi,
  useCreateLocaleMutation,
  useDeleteLocaleMutation,
  useGetLocalesQuery,
  useGetDefaultLocalesQuery,
  useUpdateLocaleMutation,
  PERMISSIONS
};
//# sourceMappingURL=chunk-V65KWPDV.js.map
