{
  "version": 3,
  "sources": ["../../../../../packages/core/admin/admin/src/components/Widgets.tsx"],
  "sourcesContent": ["import { useAuth, useTracking } from '@strapi/admin/strapi-admin';\nimport { Avatar, Badge, Box, Flex, Typography } from '@strapi/design-system';\nimport { Earth, Images, User, Key, Files, Layout, Graph, Webhooks } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { useGetCountDocumentsQuery, useGetKeyStatisticsQuery } from '../services/homepage';\nimport { getDisplayName, getInitials } from '../utils/users';\n\nimport { Widget } from './WidgetHelpers';\n\n/* -------------------------------------------------------------------------------------------------\n * ProfileWidget\n * -----------------------------------------------------------------------------------------------*/\n\nconst DisplayNameTypography = styled(Typography)`\n  font-size: 2.4rem;\n`;\n\nconst ProfileWidget = () => {\n  const user = useAuth('User', (state) => state.user);\n  const userDisplayName = getDisplayName(user);\n  const initials = getInitials(user);\n\n  return (\n    <Flex direction=\"column\" gap={3} height=\"100%\" justifyContent=\"center\">\n      <Avatar.Item delayMs={0} fallback={initials} />\n      {userDisplayName && (\n        <DisplayNameTypography fontWeight=\"bold\" textTransform=\"none\" textAlign=\"center\">\n          {userDisplayName}\n        </DisplayNameTypography>\n      )}\n      {user?.email && (\n        <Typography variant=\"omega\" textColor=\"neutral600\">\n          {user?.email}\n        </Typography>\n      )}\n      {user?.roles?.length && (\n        <Flex marginTop={2} gap={1} wrap=\"wrap\">\n          {user?.roles?.map((role) => <Badge key={role.id}>{role.name}</Badge>)}\n        </Flex>\n      )}\n    </Flex>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Key Statistics\n * -----------------------------------------------------------------------------------------------*/\nconst Grid = styled(Box)`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 0;\n  border: 1px solid ${({ theme }) => theme.colors.neutral200};\n  border-radius: ${({ theme }) => theme.borderRadius};\n  overflow: hidden;\n`;\n\nconst GridCell = styled(Box)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.neutral200};\n  border-right: 1px solid ${({ theme }) => theme.colors.neutral200};\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n\n  &:nth-child(2n) {\n    border-right: none;\n  }\n  &:nth-last-child(-n + 2) {\n    border-bottom: none;\n  }\n`;\n\nconst formatNumber = ({ locale, number }: { locale: string; number: number }) => {\n  return new Intl.NumberFormat(locale, {\n    notation: 'compact',\n    maximumFractionDigits: 1,\n  }).format(number);\n};\n\nconst LinkCell = styled(Link)`\n  text-decoration: none;\n  padding: ${({ theme }) => theme.spaces[3]};\n`;\n\nconst KeyStatisticsWidget = () => {\n  const { trackUsage } = useTracking();\n  const { formatMessage, locale } = useIntl();\n  const { data: countDocuments, isLoading: isLoadingCountDocuments } = useGetCountDocumentsQuery();\n  const { data: countKeyStatistics, isLoading: isLoadingKeyStatistics } =\n    useGetKeyStatisticsQuery();\n\n  if (isLoadingKeyStatistics || isLoadingCountDocuments) {\n    return <Widget.Loading />;\n  }\n\n  if (!countKeyStatistics || !countDocuments) {\n    return <Widget.Error />;\n  }\n\n  const keyStatisticsList = {\n    entries: {\n      label: {\n        id: 'widget.key-statistics.list.entries',\n        defaultMessage: 'Entries',\n      },\n      icon: {\n        component: <Files />,\n        background: 'primary100',\n        color: 'primary600',\n      },\n      link: '/content-manager',\n    },\n    assets: {\n      label: {\n        id: 'widget.key-statistics.list.assets',\n        defaultMessage: 'Assets',\n      },\n      icon: {\n        component: <Images />,\n        background: 'warning100',\n        color: 'warning600',\n      },\n      link: '/plugins/upload',\n    },\n    contentTypes: {\n      label: {\n        id: 'widget.key-statistics.list.contentTypes',\n        defaultMessage: 'Content-Types',\n      },\n      icon: {\n        component: <Layout />,\n        background: 'secondary100',\n        color: 'secondary600',\n      },\n      link: '/plugins/content-type-builder',\n    },\n    components: {\n      label: {\n        id: 'widget.key-statistics.list.components',\n        defaultMessage: 'Components',\n      },\n      icon: {\n        component: <Graph />,\n        background: 'alternative100',\n        color: 'alternative600',\n      },\n      link: '/plugins/content-type-builder',\n    },\n    locales: {\n      label: {\n        id: 'widget.key-statistics.list.locales',\n        defaultMessage: 'Locales',\n      },\n      icon: {\n        component: <Earth />,\n        background: 'success100',\n        color: 'success600',\n      },\n      link: '/settings/internationalization',\n    },\n    admins: {\n      label: {\n        id: 'widget.key-statistics.list.admins',\n        defaultMessage: 'Admins',\n      },\n      icon: {\n        component: <User />,\n        background: 'danger100',\n        color: 'danger600',\n      },\n      link: '/settings/users?pageSize=10&page=1&sort=firstname',\n    },\n    webhooks: {\n      label: {\n        id: 'widget.key-statistics.list.webhooks',\n        defaultMessage: 'Webhooks',\n      },\n      icon: {\n        component: <Webhooks />,\n        background: 'alternative100',\n        color: 'alternative600',\n      },\n      link: '/settings/webhooks',\n    },\n    apiTokens: {\n      label: {\n        id: 'widget.key-statistics.list.apiTokens',\n        defaultMessage: 'API Tokens',\n      },\n      icon: {\n        component: <Key />,\n        background: 'neutral100',\n        color: 'neutral600',\n      },\n      link: '/settings/api-tokens?sort=name:ASC',\n    },\n  };\n\n  const { draft, published, modified } = countDocuments ?? {\n    draft: 0,\n    published: 0,\n    modified: 0,\n  };\n\n  const totalCountEntries = draft + published + modified;\n\n  return (\n    <Grid>\n      {Object.entries(keyStatisticsList).map(([key, item]) => {\n        const value = countKeyStatistics?.[key as keyof typeof countKeyStatistics];\n        return (\n          value !== null && (\n            <GridCell\n              as={LinkCell}\n              to={item.link}\n              key={`key-statistics-${key}`}\n              data-testid={`stat-${key}`}\n              onClick={() => trackUsage('didOpenKeyStatisticsWidgetLink', { itemKey: key })}\n            >\n              <Flex alignItems=\"center\" gap={2}>\n                <Flex\n                  padding={2}\n                  borderRadius={1}\n                  background={item.icon.background}\n                  color={item.icon.color}\n                >\n                  {item.icon.component}\n                </Flex>\n                <Flex direction=\"column\" alignItems=\"flex-start\">\n                  <Typography variant=\"pi\" fontWeight=\"bold\" textColor=\"neutral500\">\n                    {formatMessage(item.label)}\n                  </Typography>\n                  <Typography variant=\"omega\" fontWeight=\"bold\" textColor=\"neutral800\">\n                    {formatNumber({\n                      locale,\n                      number: key === 'entries' ? totalCountEntries : value,\n                    })}\n                  </Typography>\n                </Flex>\n              </Flex>\n            </GridCell>\n          )\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport { ProfileWidget, KeyStatisticsWidget };\n"],
  "mappings": "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",
  "names": []
}
