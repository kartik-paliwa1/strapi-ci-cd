{
  "version": 3,
  "sources": ["../../../../../packages/core/admin/ee/admin/src/pages/AuthResponse.tsx"],
  "sourcesContent": ["import * as React from 'react';\n\nimport { useIntl } from 'react-intl';\nimport { useNavigate, useMatch } from 'react-router-dom';\n\nimport { Page } from '../../../../admin/src/components/PageHelpers';\nimport { useTypedDispatch } from '../../../../admin/src/core/store/hooks';\nimport { login } from '../../../../admin/src/reducer';\nimport { getCookieValue } from '../../../../admin/src/utils/cookies';\n\nconst AuthResponse = () => {\n  const match = useMatch('/auth/login/:authResponse');\n  const { formatMessage } = useIntl();\n  const navigate = useNavigate();\n  const dispatch = useTypedDispatch();\n\n  const redirectToOops = React.useCallback(() => {\n    navigate({\n      pathname: '/auth/oops',\n      search: `?info=${encodeURIComponent(\n        formatMessage({\n          id: 'Auth.form.button.login.providers.error',\n          defaultMessage: 'We cannot connect you through the selected provider.',\n        })\n      )}`,\n    });\n  }, [navigate, formatMessage]);\n\n  React.useEffect(() => {\n    if (match?.params.authResponse === 'error') {\n      redirectToOops();\n    }\n\n    if (match?.params.authResponse === 'success') {\n      const jwtToken = getCookieValue('jwtToken');\n\n      if (jwtToken) {\n        dispatch(\n          login({\n            token: jwtToken,\n          })\n        );\n\n        navigate('/auth/login');\n      } else {\n        redirectToOops();\n      }\n    }\n  }, [dispatch, match, redirectToOops, navigate]);\n\n  return <Page.Loading />;\n};\n\nexport { AuthResponse };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,YAAuB;AAkDd;AAxCT,IAAM,eAAe,MAAM;AACzB,QAAM,QAAQ,SAAS,2BAA2B;AAClD,QAAM,EAAE,cAAc,IAAI,QAAQ;AAClC,QAAM,WAAW,YAAY;AAC7B,QAAM,WAAW,iBAAiB;AAElC,QAAM,iBAAuB,kBAAY,MAAM;AAC7C,aAAS;AAAA,MACP,UAAU;AAAA,MACV,QAAQ,SAAS;AAAA,QACf,cAAc;AAAA,UACZ,IAAI;AAAA,UACJ,gBAAgB;AAAA,QAClB,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC;AAAA,EACH,GAAG,CAAC,UAAU,aAAa,CAAC;AAE5B,EAAM,gBAAU,MAAM;AACpB,SAAI,+BAAO,OAAO,kBAAiB,SAAS;AAC1C,qBAAe;AAAA,IACjB;AAEA,SAAI,+BAAO,OAAO,kBAAiB,WAAW;AAC5C,YAAM,WAAW,eAAe,UAAU;AAE1C,UAAI,UAAU;AACZ;AAAA,UACE,MAAM;AAAA,YACJ,OAAO;AAAA,UACT,CAAC;AAAA,QACH;AAEA,iBAAS,aAAa;AAAA,MACxB,OAAO;AACL,uBAAe;AAAA,MACjB;AAAA,IACF;AAAA,EACF,GAAG,CAAC,UAAU,OAAO,gBAAgB,QAAQ,CAAC;AAE9C,aAAO,wBAAC,KAAK,SAAL,EAAa;AACvB;",
  "names": []
}
