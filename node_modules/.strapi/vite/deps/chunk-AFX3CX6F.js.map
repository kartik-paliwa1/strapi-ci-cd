{
  "version": 3,
  "sources": ["../../../../../packages/core/admin/admin/src/services/apiTokens.ts"],
  "sourcesContent": ["import * as ApiToken from '../../../shared/contracts/api-token';\n\nimport { adminApi } from './api';\n\nconst apiTokensService = adminApi\n  .enhanceEndpoints({\n    addTagTypes: ['ApiToken'],\n  })\n  .injectEndpoints({\n    endpoints: (builder) => ({\n      getAPITokens: builder.query<ApiToken.List.Response['data'], void>({\n        query: () => '/admin/api-tokens',\n        transformResponse: (response: ApiToken.List.Response) => response.data,\n        providesTags: (res, _err) => [\n          ...(res?.map(({ id }) => ({ type: 'ApiToken' as const, id })) ?? []),\n          { type: 'ApiToken' as const, id: 'LIST' },\n        ],\n      }),\n      getAPIToken: builder.query<ApiToken.Get.Response['data'], ApiToken.Get.Params['id']>({\n        query: (id) => `/admin/api-tokens/${id}`,\n        transformResponse: (response: ApiToken.Get.Response) => response.data,\n        providesTags: (res, _err, id) => [{ type: 'ApiToken' as const, id }],\n      }),\n      createAPIToken: builder.mutation<\n        ApiToken.Create.Response['data'],\n        ApiToken.Create.Request['body']\n      >({\n        query: (body) => ({\n          url: '/admin/api-tokens',\n          method: 'POST',\n          data: body,\n        }),\n        transformResponse: (response: ApiToken.Create.Response) => response.data,\n        invalidatesTags: [{ type: 'ApiToken' as const, id: 'LIST' }, 'HomepageKeyStatistics'],\n      }),\n      deleteAPIToken: builder.mutation<\n        ApiToken.Revoke.Response['data'],\n        ApiToken.Revoke.Params['id']\n      >({\n        query: (id) => ({\n          url: `/admin/api-tokens/${id}`,\n          method: 'DELETE',\n        }),\n        transformResponse: (response: ApiToken.Revoke.Response) => response.data,\n        invalidatesTags: (_res, _err, id) => [\n          { type: 'ApiToken' as const, id },\n          'HomepageKeyStatistics',\n        ],\n      }),\n      updateAPIToken: builder.mutation<\n        ApiToken.Update.Response['data'],\n        ApiToken.Update.Params & ApiToken.Update.Request['body']\n      >({\n        query: ({ id, ...body }) => ({\n          url: `/admin/api-tokens/${id}`,\n          method: 'PUT',\n          data: body,\n        }),\n        transformResponse: (response: ApiToken.Update.Response) => response.data,\n        invalidatesTags: (_res, _err, { id }) => [{ type: 'ApiToken' as const, id }],\n      }),\n    }),\n  });\n\nconst {\n  useGetAPITokensQuery,\n  useGetAPITokenQuery,\n  useCreateAPITokenMutation,\n  useDeleteAPITokenMutation,\n  useUpdateAPITokenMutation,\n} = apiTokensService;\n\nexport {\n  useGetAPITokensQuery,\n  useGetAPITokenQuery,\n  useCreateAPITokenMutation,\n  useDeleteAPITokenMutation,\n  useUpdateAPITokenMutation,\n};\n"],
  "mappings": ";;;;;AAIA,IAAM,mBAAmB,SACtB,iBAAiB;AAAA,EAChB,aAAa,CAAC,UAAU;AAC1B,CAAC,EACA,gBAAgB;AAAA,EACf,WAAW,CAAC,aAAa;AAAA,IACvB,cAAc,QAAQ,MAA4C;AAAA,MAChE,OAAO,MAAM;AAAA,MACb,mBAAmB,CAAC,aAAqC,SAAS;AAAA,MAClE,cAAc,CAAC,KAAK,SAAS;AAAA,QAC3B,IAAI,2BAAK,IAAI,CAAC,EAAE,GAAG,OAAO,EAAE,MAAM,YAAqB,GAAG,QAAO,CAAC;AAAA,QAClE,EAAE,MAAM,YAAqB,IAAI,OAAO;AAAA,MAC1C;AAAA,IACF,CAAC;AAAA,IACD,aAAa,QAAQ,MAAgE;AAAA,MACnF,OAAO,CAAC,OAAO,qBAAqB,EAAE;AAAA,MACtC,mBAAmB,CAAC,aAAoC,SAAS;AAAA,MACjE,cAAc,CAAC,KAAK,MAAM,OAAO,CAAC,EAAE,MAAM,YAAqB,GAAG,CAAC;AAAA,IACrE,CAAC;AAAA,IACD,gBAAgB,QAAQ,SAGtB;AAAA,MACA,OAAO,CAAC,UAAU;AAAA,QAChB,KAAK;AAAA,QACL,QAAQ;AAAA,QACR,MAAM;AAAA,MACR;AAAA,MACA,mBAAmB,CAAC,aAAuC,SAAS;AAAA,MACpE,iBAAiB,CAAC,EAAE,MAAM,YAAqB,IAAI,OAAO,GAAG,uBAAuB;AAAA,IACtF,CAAC;AAAA,IACD,gBAAgB,QAAQ,SAGtB;AAAA,MACA,OAAO,CAAC,QAAQ;AAAA,QACd,KAAK,qBAAqB,EAAE;AAAA,QAC5B,QAAQ;AAAA,MACV;AAAA,MACA,mBAAmB,CAAC,aAAuC,SAAS;AAAA,MACpE,iBAAiB,CAAC,MAAM,MAAM,OAAO;AAAA,QACnC,EAAE,MAAM,YAAqB,GAAG;AAAA,QAChC;AAAA,MACF;AAAA,IACF,CAAC;AAAA,IACD,gBAAgB,QAAQ,SAGtB;AAAA,MACA,OAAO,CAAC,EAAE,IAAI,GAAG,KAAK,OAAO;AAAA,QAC3B,KAAK,qBAAqB,EAAE;AAAA,QAC5B,QAAQ;AAAA,QACR,MAAM;AAAA,MACR;AAAA,MACA,mBAAmB,CAAC,aAAuC,SAAS;AAAA,MACpE,iBAAiB,CAAC,MAAM,MAAM,EAAE,GAAG,MAAM,CAAC,EAAE,MAAM,YAAqB,GAAG,CAAC;AAAA,IAC7E,CAAC;AAAA,EACH;AACF,CAAC;AAEH,IAAM;AAAA,EACJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,IAAI;",
  "names": []
}
