{
  "version": 3,
  "sources": ["../../../../../packages/core/admin/ee/admin/src/pages/AuthPage/components/SSOProviders.tsx"],
  "sourcesContent": ["import { Flex, Grid, Tooltip, Typography } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { GetProviders } from '../../../../../../shared/contracts/providers';\n\n/* -------------------------------------------------------------------------------------------------\n * SSOProviders\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SSOProvidersProps {\n  providers: GetProviders.Response;\n  displayAllProviders?: boolean;\n}\n\nconst SSOProviders = ({ providers, displayAllProviders }: SSOProvidersProps) => {\n  const { formatMessage } = useIntl();\n\n  if (displayAllProviders) {\n    return (\n      <Grid.Root gap={4}>\n        {providers.map((provider) => (\n          <Grid.Item key={provider.uid} col={4} direction=\"column\" alignItems=\"stretch\">\n            <SSOProviderButton provider={provider} />\n          </Grid.Item>\n        ))}\n      </Grid.Root>\n    );\n  }\n\n  if (providers.length > 2 && !displayAllProviders) {\n    return (\n      <Grid.Root gap={4}>\n        {providers.slice(0, 2).map((provider) => (\n          <Grid.Item key={provider.uid} col={4} direction=\"column\" alignItems=\"stretch\">\n            <SSOProviderButton provider={provider} />\n          </Grid.Item>\n        ))}\n        <Grid.Item col={4} direction=\"column\" alignItems=\"stretch\">\n          <Tooltip\n            label={formatMessage({\n              id: 'global.see-more',\n            })}\n          >\n            <SSOButton as={Link} to=\"/auth/providers\">\n              <span aria-hidden>•••</span>\n            </SSOButton>\n          </Tooltip>\n        </Grid.Item>\n      </Grid.Root>\n    );\n  }\n\n  return (\n    <SSOProvidersWrapper justifyContent=\"center\">\n      {providers.map((provider) => (\n        <SSOProviderButton key={provider.uid} provider={provider} />\n      ))}\n    </SSOProvidersWrapper>\n  );\n};\n\nconst SSOProvidersWrapper = styled(Flex)`\n  & a:not(:first-child):not(:last-child) {\n    margin: 0 ${({ theme }) => theme.spaces[2]};\n  }\n  & a:first-child {\n    margin-right: ${({ theme }) => theme.spaces[2]};\n  }\n  & a:last-child {\n    margin-left: ${({ theme }) => theme.spaces[2]};\n  }\n`;\n\n/* -------------------------------------------------------------------------------------------------\n * SSOProviderButton\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SSOProviderButtonProps {\n  provider: GetProviders.Response[number];\n}\n\nconst SSOProviderButton = ({ provider }: SSOProviderButtonProps) => {\n  return (\n    <Tooltip label={provider.displayName}>\n      <SSOButton href={`${window.strapi.backendURL}/admin/connect/${provider.uid}`}>\n        {provider.icon ? (\n          <img src={provider.icon} aria-hidden alt=\"\" height=\"32px\" />\n        ) : (\n          <Typography>{provider.displayName}</Typography>\n        )}\n      </SSOButton>\n    </Tooltip>\n  );\n};\n\nconst SSOButton = styled.a`\n  width: 13.6rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 4.8rem;\n  border: 1px solid ${({ theme }) => theme.colors.neutral150};\n  border-radius: ${({ theme }) => theme.borderRadius};\n  text-decoration: inherit;\n  &:link {\n    text-decoration: none;\n  }\n  color: ${({ theme }) => theme.colors.neutral600};\n`;\n\nexport { SSOProviders };\nexport type { SSOProvidersProps };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAwBY;AARZ,IAAM,eAAe,CAAC,EAAE,WAAW,oBAAoB,MAAyB;AAC9E,QAAM,EAAE,cAAc,IAAI,QAAQ;AAElC,MAAI,qBAAqB;AACvB,eACE,wBAAC,KAAK,MAAL,EAAU,KAAK,GACb,oBAAU,IAAI,CAAC,iBACd,wBAAC,KAAK,MAAL,EAA6B,KAAK,GAAG,WAAU,UAAS,YAAW,WAClE,sCAAC,qBAAkB,UAAoB,KADzB,SAAS,GAEzB,CACD,GACH;AAAA,EAEJ;AAEA,MAAI,UAAU,SAAS,KAAK,CAAC,qBAAqB;AAChD,eACE,yBAAC,KAAK,MAAL,EAAU,KAAK,GACb;AAAA,gBAAU,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,iBAC1B,wBAAC,KAAK,MAAL,EAA6B,KAAK,GAAG,WAAU,UAAS,YAAW,WAClE,sCAAC,qBAAkB,UAAoB,KADzB,SAAS,GAEzB,CACD;AAAA,UACD,wBAAC,KAAK,MAAL,EAAU,KAAK,GAAG,WAAU,UAAS,YAAW,WAC/C;AAAA,QAAC;AAAA;AAAA,UACC,OAAO,cAAc;AAAA,YACnB,IAAI;AAAA,UACN,CAAC;AAAA,UAED,sCAAC,aAAU,IAAI,MAAM,IAAG,mBACtB,sCAAC,UAAK,eAAW,MAAC,iBAAG,GACvB;AAAA;AAAA,MACF,GACF;AAAA,OACF;AAAA,EAEJ;AAEA,aACE,wBAAC,uBAAoB,gBAAe,UACjC,oBAAU,IAAI,CAAC,iBACd,wBAAC,qBAAqC,YAAd,SAAS,GAAyB,CAC3D,GACH;AAEJ;AAEA,IAAM,sBAAsB,GAAO,IAAI;AAAA;AAAA,gBAEvB,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO,CAAC,CAAC;AAAA;AAAA;AAAA,oBAG1B,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO,CAAC,CAAC;AAAA;AAAA;AAAA,mBAG/B,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO,CAAC,CAAC;AAAA;AAAA;AAYjD,IAAM,oBAAoB,CAAC,EAAE,SAAS,MAA8B;AAClE,aACE,wBAAC,eAAQ,OAAO,SAAS,aACvB,sCAAC,aAAU,MAAM,GAAG,OAAO,OAAO,UAAU,kBAAkB,SAAS,GAAG,IACvE,mBAAS,WACR,wBAAC,SAAI,KAAK,SAAS,MAAM,eAAW,MAAC,KAAI,IAAG,QAAO,QAAO,QAE1D,wBAAC,cAAY,mBAAS,aAAY,GAEtC,GACF;AAEJ;AAEA,IAAM,YAAY,GAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAMH,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO,UAAU;AAAA,mBACzC,CAAC,EAAE,MAAM,MAAM,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,WAKzC,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO,UAAU;AAAA;",
  "names": []
}
