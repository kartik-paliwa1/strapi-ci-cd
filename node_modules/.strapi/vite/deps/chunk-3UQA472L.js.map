{
  "version": 3,
  "sources": ["../../../../../packages/core/review-workflows/admin/src/components/LimitsModal.tsx", "../../../../../packages/core/review-workflows/admin/src/routes/settings/hooks/useReviewWorkflows.ts", "../../../../../packages/core/review-workflows/admin/src/services/settings.ts"],
  "sourcesContent": ["import * as React from 'react';\n\nimport { Box, Flex, IconButton, Modal, Typography, LinkButton } from '@strapi/design-system';\nimport { Cross } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\n\nimport balloonImageSrc from '../assets/balloon.png';\n\nconst CTA_LEARN_MORE_HREF = 'https://strapi.io/pricing-cloud';\nconst CTA_SALES_HREF = 'https://strapi.io/contact-sales';\n\nconst Title: React.FC<React.PropsWithChildren> = ({ children }) => {\n  return <Modal.Title variant=\"alpha\">{children}</Modal.Title>;\n};\n\nconst Body: React.FC<React.PropsWithChildren> = ({ children }) => {\n  return <Typography variant=\"omega\">{children}</Typography>;\n};\n\nconst CallToActions = () => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Flex gap={2} paddingTop={4}>\n      <LinkButton variant=\"default\" isExternal href={CTA_LEARN_MORE_HREF}>\n        {formatMessage({\n          id: 'Settings.review-workflows.limit.cta.learn',\n          defaultMessage: 'Learn more',\n        })}\n      </LinkButton>\n\n      <LinkButton variant=\"tertiary\" isExternal href={CTA_SALES_HREF}>\n        {formatMessage({\n          id: 'Settings.review-workflows.limit.cta.sales',\n          defaultMessage: 'Contact Sales',\n        })}\n      </LinkButton>\n    </Flex>\n  );\n};\n\nconst BalloonImage = styled.img`\n  // Margin top|right reverse the padding of ModalBody\n  margin-right: ${({ theme }) => `-${theme.spaces[7]}`};\n  margin-top: ${({ theme }) => `-${theme.spaces[7]}`};\n  width: 360px;\n`;\n\nexport type LimitsModalProps = Pick<Modal.Props, 'open' | 'onOpenChange'>;\n\nconst Root: React.FC<React.PropsWithChildren<LimitsModalProps>> = ({\n  children,\n  open = false,\n  onOpenChange,\n}) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Modal.Root open={open} onOpenChange={onOpenChange}>\n      <Modal.Content>\n        <Modal.Body>\n          <Flex gap={2} paddingLeft={7} position=\"relative\">\n            <Flex alignItems=\"start\" direction=\"column\" gap={2} width=\"60%\">\n              {children}\n\n              <CallToActions />\n            </Flex>\n\n            <Flex justifyContent=\"end\" height=\"100%\" width=\"40%\">\n              <BalloonImage src={balloonImageSrc} aria-hidden alt=\"\" loading=\"lazy\" />\n\n              <Box display=\"flex\" position=\"absolute\" right={0} top={0}>\n                <Modal.Close>\n                  <IconButton\n                    withTooltip={false}\n                    label={formatMessage({\n                      id: 'global.close',\n                      defaultMessage: 'Close',\n                    })}\n                  >\n                    <Cross />\n                  </IconButton>\n                </Modal.Close>\n              </Box>\n            </Flex>\n          </Flex>\n        </Modal.Body>\n      </Modal.Content>\n    </Modal.Root>\n  );\n};\n\nconst LimitsModal = {\n  Title,\n  Body,\n  Root,\n};\n\nexport { LimitsModal };\n", "import * as React from 'react';\n\nimport { useAPIErrorHandler, useNotification } from '@strapi/admin/strapi-admin';\nimport { type MessageDescriptor, useIntl } from 'react-intl';\n\nimport {\n  GetWorkflowsParams,\n  useCreateWorkflowMutation,\n  useDeleteWorkflowMutation,\n  useGetWorkflowsQuery,\n  useUpdateWorkflowMutation,\n} from '../../../services/settings';\n\nimport type { Create, Update } from '../../../../../shared/contracts/review-workflows';\n\nconst DEFAULT_UNEXPECTED_ERROR_MSG = {\n  id: 'notification.error',\n  defaultMessage: 'An error occurred, please try again',\n} satisfies MessageDescriptor;\n\ntype UseReviewWorkflowsArgs = GetWorkflowsParams & {\n  skip?: boolean;\n};\n\nconst useReviewWorkflows = (params: UseReviewWorkflowsArgs = {}) => {\n  const { toggleNotification } = useNotification();\n  const { formatMessage } = useIntl();\n  const { _unstableFormatAPIError: formatAPIError } = useAPIErrorHandler();\n\n  const { skip = false, ...queryParams } = params;\n\n  const { data, isLoading, error } = useGetWorkflowsQuery(\n    {\n      ...queryParams,\n    },\n    {\n      skip,\n    }\n  );\n\n  React.useEffect(() => {\n    if (error) {\n      toggleNotification({\n        type: 'danger',\n        message: formatAPIError(error),\n      });\n    }\n  }, [error, formatAPIError, toggleNotification]);\n\n  const [createWorkflow] = useCreateWorkflowMutation();\n  const create = React.useCallback(\n    async (data: Create.Request['body']['data']) => {\n      try {\n        const res = await createWorkflow({ data });\n\n        if ('error' in res) {\n          toggleNotification({\n            type: 'danger',\n            message: formatAPIError(res.error),\n          });\n\n          return res;\n        }\n\n        toggleNotification({\n          type: 'success',\n          message: formatMessage({ id: 'actions.created', defaultMessage: 'Created workflow' }),\n        });\n\n        return res;\n      } catch (err) {\n        toggleNotification({\n          type: 'danger',\n          message: formatMessage(DEFAULT_UNEXPECTED_ERROR_MSG),\n        });\n\n        throw err;\n      }\n    },\n    [createWorkflow, formatAPIError, formatMessage, toggleNotification]\n  );\n\n  const [updateWorkflow] = useUpdateWorkflowMutation();\n  const update = React.useCallback(\n    async (id: string, data: Update.Request['body']['data']) => {\n      try {\n        const res = await updateWorkflow({ id, data });\n\n        if ('error' in res) {\n          toggleNotification({\n            type: 'danger',\n            message: formatAPIError(res.error),\n          });\n\n          return res;\n        }\n\n        toggleNotification({\n          type: 'success',\n          message: formatMessage({ id: 'actions.updated', defaultMessage: 'Updated workflow' }),\n        });\n\n        return res;\n      } catch (err) {\n        toggleNotification({\n          type: 'danger',\n          message: formatMessage(DEFAULT_UNEXPECTED_ERROR_MSG),\n        });\n\n        throw err;\n      }\n    },\n    [formatAPIError, formatMessage, toggleNotification, updateWorkflow]\n  );\n\n  const [deleteWorkflow] = useDeleteWorkflowMutation();\n  const deleteAction = React.useCallback(\n    async (id: string) => {\n      try {\n        const res = await deleteWorkflow({ id });\n\n        if ('error' in res) {\n          toggleNotification({\n            type: 'danger',\n            message: formatAPIError(res.error),\n          });\n\n          return;\n        }\n\n        toggleNotification({\n          type: 'success',\n          message: formatMessage({ id: 'actions.deleted', defaultMessage: 'Deleted workflow' }),\n        });\n\n        return res.data;\n      } catch (err) {\n        toggleNotification({\n          type: 'danger',\n          message: formatMessage(DEFAULT_UNEXPECTED_ERROR_MSG),\n        });\n\n        throw err;\n      }\n    },\n    [deleteWorkflow, formatAPIError, formatMessage, toggleNotification]\n  );\n\n  const { workflows = [], meta } = data ?? {};\n\n  return {\n    // meta contains e.g. the total of all workflows. we can not use\n    // the pagination object here, because the list is not paginated.\n    meta,\n    workflows,\n    isLoading,\n    error,\n    create,\n    delete: deleteAction,\n    update,\n  };\n};\n\nexport { useReviewWorkflows };\n", "import { reviewWorkflowsApi } from './api';\n\nimport type { Create, Update, Delete, GetAll } from '../../../shared/contracts/review-workflows';\n\nconst settingsApi = reviewWorkflowsApi.injectEndpoints({\n  endpoints: (builder) => ({\n    getWorkflows: builder.query<\n      {\n        workflows: GetAll.Response['data'];\n        meta?: GetAll.Response['meta'];\n      },\n      GetWorkflowsParams | void\n    >({\n      query: (args) => {\n        return {\n          url: '/review-workflows/workflows',\n          method: 'GET',\n          config: {\n            params: args ?? {},\n          },\n        };\n      },\n      transformResponse: (res: GetAll.Response) => {\n        return {\n          workflows: res.data,\n          meta: 'meta' in res ? res.meta : undefined,\n        };\n      },\n      providesTags: (res) => {\n        return [\n          ...(res?.workflows.map(({ id }) => ({ type: 'ReviewWorkflow' as const, id })) ?? []),\n          { type: 'ReviewWorkflow' as const, id: 'LIST' },\n        ];\n      },\n    }),\n    createWorkflow: builder.mutation<Create.Response['data'], Create.Request['body']>({\n      query: (data) => ({\n        url: '/review-workflows/workflows',\n        method: 'POST',\n        data,\n      }),\n      transformResponse: (res: Create.Response) => res.data,\n      invalidatesTags(res) {\n        return [\n          { type: 'ReviewWorkflow' as const, id: 'LIST' },\n          'ReviewWorkflowStages',\n          { type: 'Document', id: `ALL_LIST` },\n          { type: 'ContentTypeSettings', id: 'LIST' },\n          ...(res?.contentTypes.map((uid) => ({\n            type: 'Document' as const,\n            id: `${uid}_ALL_ITEMS`,\n          })) ?? []),\n        ];\n      },\n    }),\n    updateWorkflow: builder.mutation<\n      Update.Response['data'],\n      Update.Request['body'] & Update.Params\n    >({\n      query: ({ id, ...data }) => ({\n        url: `/review-workflows/workflows/${id}`,\n        method: 'PUT',\n        data,\n      }),\n      transformResponse: (res: Update.Response) => res.data,\n      invalidatesTags: (res, _err, arg) => [\n        { type: 'ReviewWorkflow' as const, id: arg.id },\n        'ReviewWorkflowStages',\n        { type: 'Document', id: 'ALL_LIST' },\n        { type: 'ContentTypeSettings', id: 'LIST' },\n        ...(res?.contentTypes.map((uid) => ({\n          type: 'Document' as const,\n          id: `${uid}_ALL_ITEMS`,\n        })) ?? []),\n      ],\n    }),\n    deleteWorkflow: builder.mutation<Delete.Response['data'], Delete.Params>({\n      query: ({ id }) => ({\n        url: `/review-workflows/workflows/${id}`,\n        method: 'DELETE',\n      }),\n      transformResponse: (res: Delete.Response) => res.data,\n      invalidatesTags: (res, _err, arg) => [\n        { type: 'ReviewWorkflow' as const, id: arg.id },\n        'ReviewWorkflowStages',\n        { type: 'Document', id: `ALL_LIST` },\n        { type: 'ContentTypeSettings', id: 'LIST' },\n      ],\n    }),\n  }),\n  overrideExisting: false,\n});\n\ntype GetWorkflowsParams = GetAll.Request['query'];\n\nconst {\n  useGetWorkflowsQuery,\n  useCreateWorkflowMutation,\n  useDeleteWorkflowMutation,\n  useUpdateWorkflowMutation,\n} = settingsApi;\n\nexport {\n  useGetWorkflowsQuery,\n  useCreateWorkflowMutation,\n  useDeleteWorkflowMutation,\n  useUpdateWorkflowMutation,\n  type GetWorkflowsParams,\n};\n"],
  "mappings": "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",
  "names": ["data"]
}
