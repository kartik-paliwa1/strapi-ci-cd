{
  "version": 3,
  "sources": ["../../../../../packages/core/admin/admin/src/components/SearchInput.tsx"],
  "sourcesContent": ["import * as React from 'react';\n\nimport { IconButton, Searchbar, SearchForm } from '@strapi/design-system';\nimport { Search as SearchIcon } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\n\nimport { TrackingEvent, useTracking } from '../features/Tracking';\nimport { useQueryParams } from '../hooks/useQueryParams';\n\ninterface SearchInputProps {\n  disabled?: boolean;\n  label: string;\n  placeholder?: string;\n  trackedEvent?: TrackingEvent['name'] | null;\n  trackedEventDetails?: TrackingEvent['properties'];\n}\n\nconst SearchInput = ({\n  disabled,\n  label,\n  placeholder,\n  trackedEvent,\n  trackedEventDetails,\n}: SearchInputProps) => {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const iconButtonRef = React.useRef<HTMLButtonElement>(null);\n\n  const [{ query }, setQuery] = useQueryParams<{ _q: string; page?: number }>();\n\n  const [value, setValue] = React.useState(query?._q || '');\n  const [isOpen, setIsOpen] = React.useState(!!value);\n\n  const { formatMessage } = useIntl();\n  const { trackUsage } = useTracking();\n\n  const handleToggle = () => setIsOpen((prev) => !prev);\n\n  React.useLayoutEffect(() => {\n    if (isOpen && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isOpen]);\n\n  const handleClear = () => {\n    setValue('');\n    setQuery({ _q: '' }, 'remove');\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    // Ensure value is a string\n    if (value) {\n      if (trackedEvent) {\n        trackUsage(trackedEvent, trackedEventDetails);\n      }\n      setQuery({ _q: encodeURIComponent(value), page: 1 });\n    } else {\n      handleToggle();\n      setQuery({ _q: '' }, 'remove');\n    }\n  };\n\n  if (isOpen) {\n    return (\n      <SearchForm onSubmit={handleSubmit}>\n        <Searchbar\n          ref={inputRef}\n          name=\"search\"\n          onChange={(e) => setValue(e.target.value)}\n          value={value}\n          clearLabel={formatMessage({ id: 'clearLabel', defaultMessage: 'Clear' })}\n          onClear={handleClear}\n          placeholder={placeholder}\n          onBlur={(e) => {\n            if (!e.currentTarget.contains(e.relatedTarget) && e.currentTarget.value === '') {\n              setIsOpen(false);\n            }\n          }}\n        >\n          {label}\n        </Searchbar>\n      </SearchForm>\n    );\n  }\n\n  return (\n    <IconButton\n      ref={iconButtonRef}\n      disabled={disabled}\n      label={formatMessage({ id: 'global.search', defaultMessage: 'Search' })}\n      onClick={handleToggle}\n    >\n      <SearchIcon />\n    </IconButton>\n  );\n};\n\nexport { SearchInput };\nexport type { SearchInputProps };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,YAAuB;AAkEf;AAjDR,IAAM,cAAc,CAAC;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAwB;AACtB,QAAM,WAAiB,aAAyB,IAAI;AACpD,QAAM,gBAAsB,aAA0B,IAAI;AAE1D,QAAM,CAAC,EAAE,MAAM,GAAG,QAAQ,IAAI,eAA8C;AAE5E,QAAM,CAAC,OAAO,QAAQ,IAAU,gBAAS,+BAAO,OAAM,EAAE;AACxD,QAAM,CAAC,QAAQ,SAAS,IAAU,eAAS,CAAC,CAAC,KAAK;AAElD,QAAM,EAAE,cAAc,IAAI,QAAQ;AAClC,QAAM,EAAE,WAAW,IAAI,YAAY;AAEnC,QAAM,eAAe,MAAM,UAAU,CAAC,SAAS,CAAC,IAAI;AAEpD,EAAM,sBAAgB,MAAM;AAC1B,QAAI,UAAU,SAAS,SAAS;AAC9B,eAAS,QAAQ,MAAM;AAAA,IACzB;AAAA,EACF,GAAG,CAAC,MAAM,CAAC;AAEX,QAAM,cAAc,MAAM;AACxB,aAAS,EAAE;AACX,aAAS,EAAE,IAAI,GAAG,GAAG,QAAQ;AAAA,EAC/B;AAEA,QAAM,eAAe,CAAC,MAAwC;AAC5D,MAAE,eAAe;AAGjB,QAAI,OAAO;AACT,UAAI,cAAc;AAChB,mBAAW,cAAc,mBAAmB;AAAA,MAC9C;AACA,eAAS,EAAE,IAAI,mBAAmB,KAAK,GAAG,MAAM,EAAE,CAAC;AAAA,IACrD,OAAO;AACL,mBAAa;AACb,eAAS,EAAE,IAAI,GAAG,GAAG,QAAQ;AAAA,IAC/B;AAAA,EACF;AAEA,MAAI,QAAQ;AACV,eACE,wBAAC,cAAW,UAAU,cACpB;AAAA,MAAC;AAAA;AAAA,QACC,KAAK;AAAA,QACL,MAAK;AAAA,QACL,UAAU,CAAC,MAAM,SAAS,EAAE,OAAO,KAAK;AAAA,QACxC;AAAA,QACA,YAAY,cAAc,EAAE,IAAI,cAAc,gBAAgB,QAAQ,CAAC;AAAA,QACvE,SAAS;AAAA,QACT;AAAA,QACA,QAAQ,CAAC,MAAM;AACb,cAAI,CAAC,EAAE,cAAc,SAAS,EAAE,aAAa,KAAK,EAAE,cAAc,UAAU,IAAI;AAC9E,sBAAU,KAAK;AAAA,UACjB;AAAA,QACF;AAAA,QAEC;AAAA;AAAA,IACH,GACF;AAAA,EAEJ;AAEA,aACE;AAAA,IAAC;AAAA;AAAA,MACC,KAAK;AAAA,MACL;AAAA,MACA,OAAO,cAAc,EAAE,IAAI,iBAAiB,gBAAgB,SAAS,CAAC;AAAA,MACtE,SAAS;AAAA,MAET,sCAAC,gBAAW;AAAA;AAAA,EACd;AAEJ;",
  "names": []
}
