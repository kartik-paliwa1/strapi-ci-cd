{
  "version": 3,
  "sources": ["../../../../../packages/core/upload/admin/src/hooks/useConfig.ts"],
  "sourcesContent": ["import { useTracking, useNotification, useFetchClient } from '@strapi/admin/strapi-admin';\nimport { useIntl } from 'react-intl';\nimport { useMutation, useQuery, UseMutationResult, UseQueryResult } from 'react-query';\n\nimport { GetConfiguration, UpdateConfiguration } from '../../../shared/contracts/configuration';\nimport { pluginId } from '../pluginId';\n\nconst endpoint = `/${pluginId}/configuration`;\nconst queryKey = [pluginId, 'configuration'];\n\nexport const useConfig = () => {\n  const { trackUsage } = useTracking();\n  const { formatMessage } = useIntl();\n  const { toggleNotification } = useNotification();\n  const { get, put } = useFetchClient();\n\n  const config: UseQueryResult<\n    GetConfiguration.Response['data']['data'] | GetConfiguration.Response['error']\n  > = useQuery(\n    queryKey,\n    async () => {\n      const res: GetConfiguration.Response = await get(endpoint);\n\n      return res.data.data;\n    },\n    {\n      onError() {\n        return toggleNotification({\n          type: 'danger',\n          message: formatMessage({ id: 'notification.error' }),\n        });\n      },\n      /**\n       * We're cementing that we always expect an object to be returned.\n       */\n      select: (data) => data || {},\n    }\n  );\n\n  const putMutation: UseMutationResult<\n    void,\n    UpdateConfiguration.Response['error'],\n    UpdateConfiguration.Request['body']\n  > = useMutation(\n    async (body) => {\n      await put<UpdateConfiguration.Response>(endpoint, body);\n    },\n    {\n      onSuccess() {\n        trackUsage('didEditMediaLibraryConfig');\n        config.refetch();\n      },\n      onError() {\n        return toggleNotification({\n          type: 'danger',\n          message: formatMessage({ id: 'notification.error' }),\n        });\n      },\n    }\n  );\n\n  return {\n    config,\n    mutateConfig: putMutation,\n  };\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAOA,IAAM,WAAW,IAAI,QAAQ;AAC7B,IAAM,WAAW,CAAC,UAAU,eAAe;AAEpC,IAAM,YAAY,MAAM;AAC7B,QAAM,EAAE,WAAW,IAAI,YAAY;AACnC,QAAM,EAAE,cAAc,IAAI,QAAQ;AAClC,QAAM,EAAE,mBAAmB,IAAI,gBAAgB;AAC/C,QAAM,EAAE,KAAK,IAAI,IAAI,eAAe;AAEpC,QAAM,SAEF;AAAA,IACF;AAAA,IACA,YAAY;AACV,YAAM,MAAiC,MAAM,IAAI,QAAQ;AAEzD,aAAO,IAAI,KAAK;AAAA,IAClB;AAAA,IACA;AAAA,MACE,UAAU;AACR,eAAO,mBAAmB;AAAA,UACxB,MAAM;AAAA,UACN,SAAS,cAAc,EAAE,IAAI,qBAAqB,CAAC;AAAA,QACrD,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA,MAIA,QAAQ,CAAC,SAAS,QAAQ,CAAC;AAAA,IAC7B;AAAA,EACF;AAEA,QAAM,cAIF;AAAA,IACF,OAAO,SAAS;AACd,YAAM,IAAkC,UAAU,IAAI;AAAA,IACxD;AAAA,IACA;AAAA,MACE,YAAY;AACV,mBAAW,2BAA2B;AACtC,eAAO,QAAQ;AAAA,MACjB;AAAA,MACA,UAAU;AACR,eAAO,mBAAmB;AAAA,UACxB,MAAM;AAAA,UACN,SAAS,cAAc,EAAE,IAAI,qBAAqB,CAAC;AAAA,QACrD,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AAAA,IACL;AAAA,IACA,cAAc;AAAA,EAChB;AACF;",
  "names": []
}
