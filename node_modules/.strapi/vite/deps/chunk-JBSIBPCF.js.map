{
  "version": 3,
  "sources": ["../../../../../node_modules/lodash.deburr/index.js", "../../../../../node_modules/@sindresorhus/transliterate/node_modules/escape-string-regexp/index.js", "../../../../../node_modules/@sindresorhus/transliterate/replacements.js", "../../../../../node_modules/@sindresorhus/transliterate/index.js", "../../../../../node_modules/@sindresorhus/slugify/overridable-replacements.js", "../../../../../node_modules/@sindresorhus/slugify/index.js", "../../../../../packages/core/content-type-builder/admin/src/constants.ts", "../../../../../packages/core/content-type-builder/admin/src/components/AutoReloadOverlayBlocker.tsx", "../../../../../packages/core/content-type-builder/admin/src/components/DataManager/reducer.ts", "../../../../../packages/core/content-type-builder/admin/src/utils/makeUnique.ts", "../../../../../packages/core/content-type-builder/admin/src/components/DataManager/undoRedo.ts", "../../../../../packages/core/content-type-builder/admin/src/components/DataManager/utils/formatSchemas.ts", "../../../../../packages/core/content-type-builder/admin/src/utils/nameToSlug.ts", "../../../../../packages/core/content-type-builder/admin/src/components/FormModal/utils/createUid.ts", "../../../../../packages/core/content-type-builder/admin/src/components/FormModal/reducer.ts", "../../../../../packages/core/content-type-builder/admin/src/components/FormModal/utils/customFieldDefaultOptionsReducer.ts", "../../../../../packages/core/content-type-builder/admin/src/components/FormModal/utils/relations.ts"],
  "sourcesContent": ["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0';\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n", "'use strict';\n\nconst matchOperatorsRegex = /[|\\\\{}()[\\]^$+*?.-]/g;\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn string.replace(matchOperatorsRegex, '\\\\$&');\n};\n", "'use strict';\n\nmodule.exports = [\n\t// German umlauts\n\t['ß', 'ss'],\n\t['ä', 'ae'],\n\t['Ä', 'Ae'],\n\t['ö', 'oe'],\n\t['Ö', 'Oe'],\n\t['ü', 'ue'],\n\t['Ü', 'Ue'],\n\n\t// Latin\n\t['À', 'A'],\n\t['Á', 'A'],\n\t['Â', 'A'],\n\t['Ã', 'A'],\n\t['Ä', 'Ae'],\n\t['Å', 'A'],\n\t['Æ', 'AE'],\n\t['Ç', 'C'],\n\t['È', 'E'],\n\t['É', 'E'],\n\t['Ê', 'E'],\n\t['Ë', 'E'],\n\t['Ì', 'I'],\n\t['Í', 'I'],\n\t['Î', 'I'],\n\t['Ï', 'I'],\n\t['Ð', 'D'],\n\t['Ñ', 'N'],\n\t['Ò', 'O'],\n\t['Ó', 'O'],\n\t['Ô', 'O'],\n\t['Õ', 'O'],\n\t['Ö', 'Oe'],\n\t['Ő', 'O'],\n\t['Ø', 'O'],\n\t['Ù', 'U'],\n\t['Ú', 'U'],\n\t['Û', 'U'],\n\t['Ü', 'Ue'],\n\t['Ű', 'U'],\n\t['Ý', 'Y'],\n\t['Þ', 'TH'],\n\t['ß', 'ss'],\n\t['à', 'a'],\n\t['á', 'a'],\n\t['â', 'a'],\n\t['ã', 'a'],\n\t['ä', 'ae'],\n\t['å', 'a'],\n\t['æ', 'ae'],\n\t['ç', 'c'],\n\t['è', 'e'],\n\t['é', 'e'],\n\t['ê', 'e'],\n\t['ë', 'e'],\n\t['ì', 'i'],\n\t['í', 'i'],\n\t['î', 'i'],\n\t['ï', 'i'],\n\t['ð', 'd'],\n\t['ñ', 'n'],\n\t['ò', 'o'],\n\t['ó', 'o'],\n\t['ô', 'o'],\n\t['õ', 'o'],\n\t['ö', 'oe'],\n\t['ő', 'o'],\n\t['ø', 'o'],\n\t['ù', 'u'],\n\t['ú', 'u'],\n\t['û', 'u'],\n\t['ü', 'ue'],\n\t['ű', 'u'],\n\t['ý', 'y'],\n\t['þ', 'th'],\n\t['ÿ', 'y'],\n\t['ẞ', 'SS'],\n\n\t// Vietnamese\n\t['à', 'a'],\n\t['À', 'A'],\n\t['á', 'a'],\n\t['Á', 'A'],\n\t['â', 'a'],\n\t['Â', 'A'],\n\t['ã', 'a'],\n\t['Ã', 'A'],\n\t['è', 'e'],\n\t['È', 'E'],\n\t['é', 'e'],\n\t['É', 'E'],\n\t['ê', 'e'],\n\t['Ê', 'E'],\n\t['ì', 'i'],\n\t['Ì', 'I'],\n\t['í', 'i'],\n\t['Í', 'I'],\n\t['ò', 'o'],\n\t['Ò', 'O'],\n\t['ó', 'o'],\n\t['Ó', 'O'],\n\t['ô', 'o'],\n\t['Ô', 'O'],\n\t['õ', 'o'],\n\t['Õ', 'O'],\n\t['ù', 'u'],\n\t['Ù', 'U'],\n\t['ú', 'u'],\n\t['Ú', 'U'],\n\t['ý', 'y'],\n\t['Ý', 'Y'],\n\t['ă', 'a'],\n\t['Ă', 'A'],\n\t['Đ', 'D'],\n\t['đ', 'd'],\n\t['ĩ', 'i'],\n\t['Ĩ', 'I'],\n\t['ũ', 'u'],\n\t['Ũ', 'U'],\n\t['ơ', 'o'],\n\t['Ơ', 'O'],\n\t['ư', 'u'],\n\t['Ư', 'U'],\n\t['ạ', 'a'],\n\t['Ạ', 'A'],\n\t['ả', 'a'],\n\t['Ả', 'A'],\n\t['ấ', 'a'],\n\t['Ấ', 'A'],\n\t['ầ', 'a'],\n\t['Ầ', 'A'],\n\t['ẩ', 'a'],\n\t['Ẩ', 'A'],\n\t['ẫ', 'a'],\n\t['Ẫ', 'A'],\n\t['ậ', 'a'],\n\t['Ậ', 'A'],\n\t['ắ', 'a'],\n\t['Ắ', 'A'],\n\t['ằ', 'a'],\n\t['Ằ', 'A'],\n\t['ẳ', 'a'],\n\t['Ẳ', 'A'],\n\t['ẵ', 'a'],\n\t['Ẵ', 'A'],\n\t['ặ', 'a'],\n\t['Ặ', 'A'],\n\t['ẹ', 'e'],\n\t['Ẹ', 'E'],\n\t['ẻ', 'e'],\n\t['Ẻ', 'E'],\n\t['ẽ', 'e'],\n\t['Ẽ', 'E'],\n\t['ế', 'e'],\n\t['Ế', 'E'],\n\t['ề', 'e'],\n\t['Ề', 'E'],\n\t['ể', 'e'],\n\t['Ể', 'E'],\n\t['ễ', 'e'],\n\t['Ễ', 'E'],\n\t['ệ', 'e'],\n\t['Ệ', 'E'],\n\t['ỉ', 'i'],\n\t['Ỉ', 'I'],\n\t['ị', 'i'],\n\t['Ị', 'I'],\n\t['ọ', 'o'],\n\t['Ọ', 'O'],\n\t['ỏ', 'o'],\n\t['Ỏ', 'O'],\n\t['ố', 'o'],\n\t['Ố', 'O'],\n\t['ồ', 'o'],\n\t['Ồ', 'O'],\n\t['ổ', 'o'],\n\t['Ổ', 'O'],\n\t['ỗ', 'o'],\n\t['Ỗ', 'O'],\n\t['ộ', 'o'],\n\t['Ộ', 'O'],\n\t['ớ', 'o'],\n\t['Ớ', 'O'],\n\t['ờ', 'o'],\n\t['Ờ', 'O'],\n\t['ở', 'o'],\n\t['Ở', 'O'],\n\t['ỡ', 'o'],\n\t['Ỡ', 'O'],\n\t['ợ', 'o'],\n\t['Ợ', 'O'],\n\t['ụ', 'u'],\n\t['Ụ', 'U'],\n\t['ủ', 'u'],\n\t['Ủ', 'U'],\n\t['ứ', 'u'],\n\t['Ứ', 'U'],\n\t['ừ', 'u'],\n\t['Ừ', 'U'],\n\t['ử', 'u'],\n\t['Ử', 'U'],\n\t['ữ', 'u'],\n\t['Ữ', 'U'],\n\t['ự', 'u'],\n\t['Ự', 'U'],\n\t['ỳ', 'y'],\n\t['Ỳ', 'Y'],\n\t['ỵ', 'y'],\n\t['Ỵ', 'Y'],\n\t['ỷ', 'y'],\n\t['Ỷ', 'Y'],\n\t['ỹ', 'y'],\n\t['Ỹ', 'Y'],\n\n\t// Arabic\n\t['ء', 'e'],\n\t['آ', 'a'],\n\t['أ', 'a'],\n\t['ؤ', 'w'],\n\t['إ', 'i'],\n\t['ئ', 'y'],\n\t['ا', 'a'],\n\t['ب', 'b'],\n\t['ة', 't'],\n\t['ت', 't'],\n\t['ث', 'th'],\n\t['ج', 'j'],\n\t['ح', 'h'],\n\t['خ', 'kh'],\n\t['د', 'd'],\n\t['ذ', 'dh'],\n\t['ر', 'r'],\n\t['ز', 'z'],\n\t['س', 's'],\n\t['ش', 'sh'],\n\t['ص', 's'],\n\t['ض', 'd'],\n\t['ط', 't'],\n\t['ظ', 'z'],\n\t['ع', 'e'],\n\t['غ', 'gh'],\n\t['ـ', '_'],\n\t['ف', 'f'],\n\t['ق', 'q'],\n\t['ك', 'k'],\n\t['ل', 'l'],\n\t['م', 'm'],\n\t['ن', 'n'],\n\t['ه', 'h'],\n\t['و', 'w'],\n\t['ى', 'a'],\n\t['ي', 'y'],\n\t['َ‎', 'a'],\n\t['ُ', 'u'],\n\t['ِ‎', 'i'],\n\t['٠', '0'],\n\t['١', '1'],\n\t['٢', '2'],\n\t['٣', '3'],\n\t['٤', '4'],\n\t['٥', '5'],\n\t['٦', '6'],\n\t['٧', '7'],\n\t['٨', '8'],\n\t['٩', '9'],\n\n\t// Persian / Farsi\n\t['چ', 'ch'],\n\t['ک', 'k'],\n\t['گ', 'g'],\n\t['پ', 'p'],\n\t['ژ', 'zh'],\n\t['ی', 'y'],\n\t['۰', '0'],\n\t['۱', '1'],\n\t['۲', '2'],\n\t['۳', '3'],\n\t['۴', '4'],\n\t['۵', '5'],\n\t['۶', '6'],\n\t['۷', '7'],\n\t['۸', '8'],\n\t['۹', '9'],\n\n\t// Pashto\n\t['ټ', 'p'],\n\t['ځ', 'z'],\n\t['څ', 'c'],\n\t['ډ', 'd'],\n\t['ﺫ', 'd'],\n\t['ﺭ', 'r'],\n\t['ړ', 'r'],\n\t['ﺯ', 'z'],\n\t['ږ', 'g'],\n\t['ښ', 'x'],\n\t['ګ', 'g'],\n\t['ڼ', 'n'],\n\t['ۀ', 'e'],\n\t['ې', 'e'],\n\t['ۍ', 'ai'],\n\n\t// Urdu\n\t['ٹ', 't'],\n\t['ڈ', 'd'],\n\t['ڑ', 'r'],\n\t['ں', 'n'],\n\t['ہ', 'h'],\n\t['ھ', 'h'],\n\t['ے', 'e'],\n\n\t// Russian\n\t['А', 'A'],\n\t['а', 'a'],\n\t['Б', 'B'],\n\t['б', 'b'],\n\t['В', 'V'],\n\t['в', 'v'],\n\t['Г', 'G'],\n\t['г', 'g'],\n\t['Д', 'D'],\n\t['д', 'd'],\n\t['Е', 'E'],\n\t['е', 'e'],\n\t['Ж', 'Zh'],\n\t['ж', 'zh'],\n\t['З', 'Z'],\n\t['з', 'z'],\n\t['И', 'I'],\n\t['и', 'i'],\n\t['Й', 'J'],\n\t['й', 'j'],\n\t['К', 'K'],\n\t['к', 'k'],\n\t['Л', 'L'],\n\t['л', 'l'],\n\t['М', 'M'],\n\t['м', 'm'],\n\t['Н', 'N'],\n\t['н', 'n'],\n\t['О', 'O'],\n\t['о', 'o'],\n\t['П', 'P'],\n\t['п', 'p'],\n\t['Р', 'R'],\n\t['р', 'r'],\n\t['С', 'S'],\n\t['с', 's'],\n\t['Т', 'T'],\n\t['т', 't'],\n\t['У', 'U'],\n\t['у', 'u'],\n\t['Ф', 'F'],\n\t['ф', 'f'],\n\t['Х', 'H'],\n\t['х', 'h'],\n\t['Ц', 'Cz'],\n\t['ц', 'cz'],\n\t['Ч', 'Ch'],\n\t['ч', 'ch'],\n\t['Ш', 'Sh'],\n\t['ш', 'sh'],\n\t['Щ', 'Shh'],\n\t['щ', 'shh'],\n\t['Ъ', ''],\n\t['ъ', ''],\n\t['Ы', 'Y'],\n\t['ы', 'y'],\n\t['Ь', ''],\n\t['ь', ''],\n\t['Э', 'E'],\n\t['э', 'e'],\n\t['Ю', 'Yu'],\n\t['ю', 'yu'],\n\t['Я', 'Ya'],\n\t['я', 'ya'],\n\t['Ё', 'Yo'],\n\t['ё', 'yo'],\n\n\t// Romanian\n\t['ă', 'a'],\n\t['Ă', 'A'],\n\t['ș', 's'],\n\t['Ș', 'S'],\n\t['ț', 't'],\n\t['Ț', 'T'],\n\t['ţ', 't'],\n\t['Ţ', 'T'],\n\n\t// Turkish\n\t['ş', 's'],\n\t['Ş', 'S'],\n\t['ç', 'c'],\n\t['Ç', 'C'],\n\t['ğ', 'g'],\n\t['Ğ', 'G'],\n\t['ı', 'i'],\n\t['İ', 'I'],\n\n\t// Armenian\n\t['ա', 'a'],\n\t['Ա', 'A'],\n\t['բ', 'b'],\n\t['Բ', 'B'],\n\t['գ', 'g'],\n\t['Գ', 'G'],\n\t['դ', 'd'],\n\t['Դ', 'D'],\n\t['ե', 'ye'],\n\t['Ե', 'Ye'],\n\t['զ', 'z'],\n\t['Զ', 'Z'],\n\t['է', 'e'],\n\t['Է', 'E'],\n\t['ը', 'y'],\n\t['Ը', 'Y'],\n\t['թ', 't'],\n\t['Թ', 'T'],\n\t['ժ', 'zh'],\n\t['Ժ', 'Zh'],\n\t['ի', 'i'],\n\t['Ի', 'I'],\n\t['լ', 'l'],\n\t['Լ', 'L'],\n\t['խ', 'kh'],\n\t['Խ', 'Kh'],\n\t['ծ', 'ts'],\n\t['Ծ', 'Ts'],\n\t['կ', 'k'],\n\t['Կ', 'K'],\n\t['հ', 'h'],\n\t['Հ', 'H'],\n\t['ձ', 'dz'],\n\t['Ձ', 'Dz'],\n\t['ղ', 'gh'],\n\t['Ղ', 'Gh'],\n\t['ճ', 'tch'],\n\t['Ճ', 'Tch'],\n\t['մ', 'm'],\n\t['Մ', 'M'],\n\t['յ', 'y'],\n\t['Յ', 'Y'],\n\t['ն', 'n'],\n\t['Ն', 'N'],\n\t['շ', 'sh'],\n\t['Շ', 'Sh'],\n\t['ո', 'vo'],\n\t['Ո', 'Vo'],\n\t['չ', 'ch'],\n\t['Չ', 'Ch'],\n\t['պ', 'p'],\n\t['Պ', 'P'],\n\t['ջ', 'j'],\n\t['Ջ', 'J'],\n\t['ռ', 'r'],\n\t['Ռ', 'R'],\n\t['ս', 's'],\n\t['Ս', 'S'],\n\t['վ', 'v'],\n\t['Վ', 'V'],\n\t['տ', 't'],\n\t['Տ', 'T'],\n\t['ր', 'r'],\n\t['Ր', 'R'],\n\t['ց', 'c'],\n\t['Ց', 'C'],\n\t['ու', 'u'],\n\t['ՈՒ', 'U'],\n\t['Ու', 'U'],\n\t['փ', 'p'],\n\t['Փ', 'P'],\n\t['ք', 'q'],\n\t['Ք', 'Q'],\n\t['օ', 'o'],\n\t['Օ', 'O'],\n\t['ֆ', 'f'],\n\t['Ֆ', 'F'],\n\t['և', 'yev'],\n\n\t// Georgian\n\t['ა', 'a'],\n\t['ბ', 'b'],\n\t['გ', 'g'],\n\t['დ', 'd'],\n\t['ე', 'e'],\n\t['ვ', 'v'],\n\t['ზ', 'z'],\n\t['თ', 't'],\n\t['ი', 'i'],\n\t['კ', 'k'],\n\t['ლ', 'l'],\n\t['მ', 'm'],\n\t['ნ', 'n'],\n\t['ო', 'o'],\n\t['პ', 'p'],\n\t['ჟ', 'zh'],\n\t['რ', 'r'],\n\t['ს', 's'],\n\t['ტ', 't'],\n\t['უ', 'u'],\n\t['ფ', 'ph'],\n\t['ქ', 'q'],\n\t['ღ', 'gh'],\n\t['ყ', 'k'],\n\t['შ', 'sh'],\n\t['ჩ', 'ch'],\n\t['ც', 'ts'],\n\t['ძ', 'dz'],\n\t['წ', 'ts'],\n\t['ჭ', 'tch'],\n\t['ხ', 'kh'],\n\t['ჯ', 'j'],\n\t['ჰ', 'h'],\n\n\t// Czech\n\t['č', 'c'],\n\t['ď', 'd'],\n\t['ě', 'e'],\n\t['ň', 'n'],\n\t['ř', 'r'],\n\t['š', 's'],\n\t['ť', 't'],\n\t['ů', 'u'],\n\t['ž', 'z'],\n\t['Č', 'C'],\n\t['Ď', 'D'],\n\t['Ě', 'E'],\n\t['Ň', 'N'],\n\t['Ř', 'R'],\n\t['Š', 'S'],\n\t['Ť', 'T'],\n\t['Ů', 'U'],\n\t['Ž', 'Z'],\n\n\t// Dhivehi\n\t['ހ', 'h'],\n\t['ށ', 'sh'],\n\t['ނ', 'n'],\n\t['ރ', 'r'],\n\t['ބ', 'b'],\n\t['ޅ', 'lh'],\n\t['ކ', 'k'],\n\t['އ', 'a'],\n\t['ވ', 'v'],\n\t['މ', 'm'],\n\t['ފ', 'f'],\n\t['ދ', 'dh'],\n\t['ތ', 'th'],\n\t['ލ', 'l'],\n\t['ގ', 'g'],\n\t['ޏ', 'gn'],\n\t['ސ', 's'],\n\t['ޑ', 'd'],\n\t['ޒ', 'z'],\n\t['ޓ', 't'],\n\t['ޔ', 'y'],\n\t['ޕ', 'p'],\n\t['ޖ', 'j'],\n\t['ޗ', 'ch'],\n\t['ޘ', 'tt'],\n\t['ޙ', 'hh'],\n\t['ޚ', 'kh'],\n\t['ޛ', 'th'],\n\t['ޜ', 'z'],\n\t['ޝ', 'sh'],\n\t['ޞ', 's'],\n\t['ޟ', 'd'],\n\t['ޠ', 't'],\n\t['ޡ', 'z'],\n\t['ޢ', 'a'],\n\t['ޣ', 'gh'],\n\t['ޤ', 'q'],\n\t['ޥ', 'w'],\n\t['ަ', 'a'],\n\t['ާ', 'aa'],\n\t['ި', 'i'],\n\t['ީ', 'ee'],\n\t['ު', 'u'],\n\t['ޫ', 'oo'],\n\t['ެ', 'e'],\n\t['ޭ', 'ey'],\n\t['ޮ', 'o'],\n\t['ޯ', 'oa'],\n\t['ް', ''],\n\n\t// Greek\n\t['α', 'a'],\n\t['β', 'v'],\n\t['γ', 'g'],\n\t['δ', 'd'],\n\t['ε', 'e'],\n\t['ζ', 'z'],\n\t['η', 'i'],\n\t['θ', 'th'],\n\t['ι', 'i'],\n\t['κ', 'k'],\n\t['λ', 'l'],\n\t['μ', 'm'],\n\t['ν', 'n'],\n\t['ξ', 'ks'],\n\t['ο', 'o'],\n\t['π', 'p'],\n\t['ρ', 'r'],\n\t['σ', 's'],\n\t['τ', 't'],\n\t['υ', 'y'],\n\t['φ', 'f'],\n\t['χ', 'x'],\n\t['ψ', 'ps'],\n\t['ω', 'o'],\n\t['ά', 'a'],\n\t['έ', 'e'],\n\t['ί', 'i'],\n\t['ό', 'o'],\n\t['ύ', 'y'],\n\t['ή', 'i'],\n\t['ώ', 'o'],\n\t['ς', 's'],\n\t['ϊ', 'i'],\n\t['ΰ', 'y'],\n\t['ϋ', 'y'],\n\t['ΐ', 'i'],\n\t['Α', 'A'],\n\t['Β', 'B'],\n\t['Γ', 'G'],\n\t['Δ', 'D'],\n\t['Ε', 'E'],\n\t['Ζ', 'Z'],\n\t['Η', 'I'],\n\t['Θ', 'TH'],\n\t['Ι', 'I'],\n\t['Κ', 'K'],\n\t['Λ', 'L'],\n\t['Μ', 'M'],\n\t['Ν', 'N'],\n\t['Ξ', 'KS'],\n\t['Ο', 'O'],\n\t['Π', 'P'],\n\t['Ρ', 'R'],\n\t['Σ', 'S'],\n\t['Τ', 'T'],\n\t['Υ', 'Y'],\n\t['Φ', 'F'],\n\t['Χ', 'X'],\n\t['Ψ', 'PS'],\n\t['Ω', 'O'],\n\t['Ά', 'A'],\n\t['Έ', 'E'],\n\t['Ί', 'I'],\n\t['Ό', 'O'],\n\t['Ύ', 'Y'],\n\t['Ή', 'I'],\n\t['Ώ', 'O'],\n\t['Ϊ', 'I'],\n\t['Ϋ', 'Y'],\n\n\t// Disabled as it conflicts with German and Latin.\n\t// Hungarian\n\t// ['ä', 'a'],\n\t// ['Ä', 'A'],\n\t// ['ö', 'o'],\n\t// ['Ö', 'O'],\n\t// ['ü', 'u'],\n\t// ['Ü', 'U'],\n\t// ['ű', 'u'],\n\t// ['Ű', 'U'],\n\n\t// Latvian\n\t['ā', 'a'],\n\t['ē', 'e'],\n\t['ģ', 'g'],\n\t['ī', 'i'],\n\t['ķ', 'k'],\n\t['ļ', 'l'],\n\t['ņ', 'n'],\n\t['ū', 'u'],\n\t['Ā', 'A'],\n\t['Ē', 'E'],\n\t['Ģ', 'G'],\n\t['Ī', 'I'],\n\t['Ķ', 'K'],\n\t['Ļ', 'L'],\n\t['Ņ', 'N'],\n\t['Ū', 'U'],\n\t['č', 'c'],\n\t['š', 's'],\n\t['ž', 'z'],\n\t['Č', 'C'],\n\t['Š', 'S'],\n\t['Ž', 'Z'],\n\n\t// Lithuanian\n\t['ą', 'a'],\n\t['č', 'c'],\n\t['ę', 'e'],\n\t['ė', 'e'],\n\t['į', 'i'],\n\t['š', 's'],\n\t['ų', 'u'],\n\t['ū', 'u'],\n\t['ž', 'z'],\n\t['Ą', 'A'],\n\t['Č', 'C'],\n\t['Ę', 'E'],\n\t['Ė', 'E'],\n\t['Į', 'I'],\n\t['Š', 'S'],\n\t['Ų', 'U'],\n\t['Ū', 'U'],\n\n\t// Macedonian\n\t['Ќ', 'Kj'],\n\t['ќ', 'kj'],\n\t['Љ', 'Lj'],\n\t['љ', 'lj'],\n\t['Њ', 'Nj'],\n\t['њ', 'nj'],\n\t['Тс', 'Ts'],\n\t['тс', 'ts'],\n\n\t// Polish\n\t['ą', 'a'],\n\t['ć', 'c'],\n\t['ę', 'e'],\n\t['ł', 'l'],\n\t['ń', 'n'],\n\t['ś', 's'],\n\t['ź', 'z'],\n\t['ż', 'z'],\n\t['Ą', 'A'],\n\t['Ć', 'C'],\n\t['Ę', 'E'],\n\t['Ł', 'L'],\n\t['Ń', 'N'],\n\t['Ś', 'S'],\n\t['Ź', 'Z'],\n\t['Ż', 'Z'],\n\n\t// Disabled as it conflicts with Vietnamese.\n\t// Serbian\n\t// ['љ', 'lj'],\n\t// ['њ', 'nj'],\n\t// ['Љ', 'Lj'],\n\t// ['Њ', 'Nj'],\n\t// ['đ', 'dj'],\n\t// ['Đ', 'Dj'],\n\t// ['ђ', 'dj'],\n\t// ['ј', 'j'],\n\t// ['ћ', 'c'],\n\t// ['џ', 'dz'],\n\t// ['Ђ', 'Dj'],\n\t// ['Ј', 'j'],\n\t// ['Ћ', 'C'],\n\t// ['Џ', 'Dz'],\n\n\t// Disabled as it conflicts with German and Latin.\n\t// Slovak\n\t// ['ä', 'a'],\n\t// ['Ä', 'A'],\n\t// ['ľ', 'l'],\n\t// ['ĺ', 'l'],\n\t// ['ŕ', 'r'],\n\t// ['Ľ', 'L'],\n\t// ['Ĺ', 'L'],\n\t// ['Ŕ', 'R'],\n\n\t// Disabled as it conflicts with German and Latin.\n\t// Swedish\n\t// ['å', 'o'],\n\t// ['Å', 'o'],\n\t// ['ä', 'a'],\n\t// ['Ä', 'A'],\n\t// ['ë', 'e'],\n\t// ['Ë', 'E'],\n\t// ['ö', 'o'],\n\t// ['Ö', 'O'],\n\n\t// Ukrainian\n\t['Є', 'Ye'],\n\t['І', 'I'],\n\t['Ї', 'Yi'],\n\t['Ґ', 'G'],\n\t['є', 'ye'],\n\t['і', 'i'],\n\t['ї', 'yi'],\n\t['ґ', 'g']\n\n\t// Danish\n\t// ['Æ', 'Ae'],\n\t// ['Ø', 'Oe'],\n\t// ['Å', 'Aa'],\n\t// ['æ', 'ae'],\n\t// ['ø', 'oe'],\n\t// ['å', 'aa']\n];\n", "'use strict';\nconst deburr = require('lodash.deburr');\nconst escapeStringRegexp = require('escape-string-regexp');\nconst builtinReplacements = require('./replacements');\n\nconst doCustomReplacements = (string, replacements) => {\n\tfor (const [key, value] of replacements) {\n\t\t// TODO: Use `String#replaceAll()` when targeting Node.js 16.\n\t\tstring = string.replace(new RegExp(escapeStringRegexp(key), 'g'), value);\n\t}\n\n\treturn string;\n};\n\nmodule.exports = (string, options) => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got \\`${typeof string}\\``);\n\t}\n\n\toptions = {\n\t\tcustomReplacements: [],\n\t\t...options\n\t};\n\n\tconst customReplacements = new Map([\n\t\t...builtinReplacements,\n\t\t...options.customReplacements\n\t]);\n\n\tstring = string.normalize();\n\tstring = doCustomReplacements(string, customReplacements);\n\tstring = deburr(string);\n\n\treturn string;\n};\n", "'use strict';\n\nmodule.exports = [\n\t['&', ' and '],\n\t['🦄', ' unicorn '],\n\t['♥', ' love ']\n];\n", "'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst transliterate = require('@sindresorhus/transliterate');\nconst builtinOverridableReplacements = require('./overridable-replacements');\n\nconst decamelize = string => {\n\treturn string\n\t\t// Separate capitalized words.\n\t\t.replace(/([A-Z]{2,})(\\d+)/g, '$1 $2')\n\t\t.replace(/([a-z\\d]+)([A-Z]{2,})/g, '$1 $2')\n\n\t\t.replace(/([a-z\\d])([A-Z])/g, '$1 $2')\n\t\t.replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1 $2');\n};\n\nconst removeMootSeparators = (string, separator) => {\n\tconst escapedSeparator = escapeStringRegexp(separator);\n\n\treturn string\n\t\t.replace(new RegExp(`${escapedSeparator}{2,}`, 'g'), separator)\n\t\t.replace(new RegExp(`^${escapedSeparator}|${escapedSeparator}$`, 'g'), '');\n};\n\nconst slugify = (string, options) => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got \\`${typeof string}\\``);\n\t}\n\n\toptions = {\n\t\tseparator: '-',\n\t\tlowercase: true,\n\t\tdecamelize: true,\n\t\tcustomReplacements: [],\n\t\tpreserveLeadingUnderscore: false,\n\t\t...options\n\t};\n\n\tconst shouldPrependUnderscore = options.preserveLeadingUnderscore && string.startsWith('_');\n\n\tconst customReplacements = new Map([\n\t\t...builtinOverridableReplacements,\n\t\t...options.customReplacements\n\t]);\n\n\tstring = transliterate(string, {customReplacements});\n\n\tif (options.decamelize) {\n\t\tstring = decamelize(string);\n\t}\n\n\tlet patternSlug = /[^a-zA-Z\\d]+/g;\n\n\tif (options.lowercase) {\n\t\tstring = string.toLowerCase();\n\t\tpatternSlug = /[^a-z\\d]+/g;\n\t}\n\n\tstring = string.replace(patternSlug, options.separator);\n\tstring = string.replace(/\\\\/g, '');\n\tif (options.separator) {\n\t\tstring = removeMootSeparators(string, options.separator);\n\t}\n\n\tif (shouldPrependUnderscore) {\n\t\tstring = `_${string}`;\n\t}\n\n\treturn string;\n};\n\nconst counter = () => {\n\tconst occurrences = new Map();\n\n\tconst countable = (string, options) => {\n\t\tstring = slugify(string, options);\n\n\t\tif (!string) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst stringLower = string.toLowerCase();\n\t\tconst numberless = occurrences.get(stringLower.replace(/(?:-\\d+?)+?$/, '')) || 0;\n\t\tconst counter = occurrences.get(stringLower);\n\t\toccurrences.set(stringLower, typeof counter === 'number' ? counter + 1 : 1);\n\t\tconst newCounter = occurrences.get(stringLower) || 2;\n\t\tif (newCounter >= 2 || numberless > 2) {\n\t\t\tstring = `${string}-${newCounter}`;\n\t\t}\n\n\t\treturn string;\n\t};\n\n\tcountable.reset = () => {\n\t\toccurrences.clear();\n\t};\n\n\treturn countable;\n};\n\nmodule.exports = slugify;\nmodule.exports.counter = counter;\n", "export const PERMISSIONS = {\n  // This permission regards the main component (App) and is used to tell\n  // If the plugin link should be displayed in the menu\n  // And also if the plugin is accessible. This use case is found when a user types the url of the\n  // plugin directly in the browser\n  main: [{ action: 'plugin::content-type-builder.read', subject: null }],\n};\n\nexport const MAX_COMPONENT_DEPTH = 6;\n", "import * as React from 'react';\n\nimport { Box, Flex, Typography, Link } from '@strapi/design-system';\nimport { Clock, ArrowClockwise } from '@strapi/icons';\nimport { createPortal } from 'react-dom';\nimport { MessageDescriptor, useIntl } from 'react-intl';\nimport { styled, keyframes } from 'styled-components';\n\n/**\n * TODO: realistically a lot of this logic is isolated to the `core/admin` package.\n * However, we want to expose the `useAutoReloadOverlayBlocker` hook to the plugins.\n *\n * Therefore, in V5 we should move this logic back to the `core/admin` package & export\n * the hook from that package and re-export here. For now, let's keep it all together\n * because it's easier to diagnose and we're not using a million refs because we don't\n * understand what's going on.\n */\nexport interface AutoReloadOverlayBlockerConfig {\n  title?: string;\n  description?: string;\n  icon?: 'reload' | 'time';\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Context\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface AutoReloadOverlayBlockerContextValue {\n  lockAppWithAutoreload: (config?: AutoReloadOverlayBlockerConfig) => void;\n  unlockAppWithAutoreload: () => void;\n}\n\nconst AutoReloadOverlayBlockerContext = React.createContext<AutoReloadOverlayBlockerContextValue>({\n  lockAppWithAutoreload: () => {},\n  unlockAppWithAutoreload: () => {},\n});\n\n/* -------------------------------------------------------------------------------------------------\n * Provider\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface AutoReloadOverlayBlockerProviderProps {\n  children: React.ReactNode;\n}\n\nconst MAX_ELAPSED_TIME = 300 * 1000;\n\nconst AutoReloadOverlayBlockerProvider = ({ children }: AutoReloadOverlayBlockerProviderProps) => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [config, setConfig] = React.useState<AutoReloadOverlayBlockerConfig>({});\n  const [failed, setFailed] = React.useState(false);\n\n  const lockAppWithAutoreload = React.useCallback((config: AutoReloadOverlayBlockerConfig = {}) => {\n    setIsOpen(true);\n    setConfig(config);\n  }, []);\n\n  const unlockAppWithAutoreload = React.useCallback(() => {\n    setIsOpen(false);\n    setConfig({});\n  }, []);\n\n  // eslint-disable-next-line consistent-return\n  React.useEffect(() => {\n    if (isOpen) {\n      const timeout = setTimeout(() => {\n        setFailed(true);\n      }, MAX_ELAPSED_TIME);\n\n      return () => {\n        clearTimeout(timeout);\n      };\n    }\n  }, [isOpen]);\n\n  let displayedIcon = config?.icon || 'reload';\n\n  let description = {\n    id: config?.description || 'components.OverlayBlocker.description',\n    defaultMessage:\n      \"You're using a feature that needs the server to restart. The page will reload automatically.\",\n  };\n\n  let title = {\n    id: config?.title || 'components.OverlayBlocker.title',\n    defaultMessage: 'Waiting for restart',\n  };\n\n  if (failed) {\n    displayedIcon = 'time';\n\n    description = {\n      id: 'components.OverlayBlocker.description.serverError',\n      defaultMessage: 'The server should have restarted, please check your logs in the terminal.',\n    };\n\n    title = {\n      id: 'components.OverlayBlocker.title.serverError',\n      defaultMessage: 'The restart is taking longer than expected',\n    };\n  }\n\n  const autoReloadValue = React.useMemo(\n    () => ({\n      lockAppWithAutoreload,\n      unlockAppWithAutoreload,\n    }),\n    [lockAppWithAutoreload, unlockAppWithAutoreload]\n  );\n\n  return (\n    <AutoReloadOverlayBlockerContext.Provider value={autoReloadValue}>\n      <Blocker\n        displayedIcon={displayedIcon}\n        isOpen={isOpen}\n        description={description}\n        title={title}\n      />\n      {children}\n    </AutoReloadOverlayBlockerContext.Provider>\n  );\n};\n\ninterface BlockerProps {\n  displayedIcon: string;\n  description: MessageDescriptor;\n  isOpen: boolean;\n  title: MessageDescriptor;\n}\n\nconst Blocker = ({ displayedIcon, description, title, isOpen }: BlockerProps) => {\n  const { formatMessage } = useIntl();\n\n  // eslint-disable-next-line no-undef\n  return isOpen && globalThis?.document?.body\n    ? createPortal(\n        <Overlay id=\"autoReloadOverlayBlocker\" direction=\"column\" alignItems=\"center\" gap={6}>\n          <Flex direction=\"column\" alignItems=\"center\" gap={2}>\n            <Typography tag=\"h1\" variant=\"alpha\">\n              {formatMessage(title)}\n            </Typography>\n            <Typography tag=\"h2\" textColor=\"neutral600\" fontSize={4} fontWeight=\"regular\">\n              {formatMessage(description)}\n            </Typography>\n          </Flex>\n          {displayedIcon === 'reload' && (\n            <IconBox padding={6} background=\"primary100\" borderColor=\"primary200\">\n              <LoaderReload width=\"4rem\" height=\"4rem\" />\n            </IconBox>\n          )}\n          {displayedIcon === 'time' && (\n            <IconBox padding={6} background=\"primary100\" borderColor=\"primary200\">\n              <Clock width=\"4rem\" height=\"4rem\" />\n            </IconBox>\n          )}\n          <Box marginTop={2}>\n            <Link href=\"https://docs.strapi.io\" isExternal>\n              {formatMessage({\n                id: 'global.documentation',\n                defaultMessage: 'Read the documentation',\n              })}\n            </Link>\n          </Box>\n        </Overlay>,\n        // eslint-disable-next-line no-undef\n        globalThis.document.body\n      )\n    : null;\n};\n\nconst rotation = keyframes`\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(359deg);\n    }\n  `;\n\nconst LoaderReload = styled(ArrowClockwise)`\n  animation: ${rotation} 1s infinite linear;\n`;\n\nconst Overlay = styled(Flex)`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  /* TODO: set this up in the theme for consistence z-index values */\n  z-index: 1140;\n  padding-top: 16rem;\n\n  & > * {\n    position: relative;\n    z-index: 1;\n  }\n\n  &:before {\n    content: '';\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background: ${({ theme }) => theme.colors.neutral0};\n    opacity: 0.9;\n  }\n`;\n\nconst IconBox = styled(Box)`\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  svg {\n    > path {\n      fill: ${({ theme }) => theme.colors.primary600} !important;\n    }\n  }\n`;\n\n/* -------------------------------------------------------------------------------------------------\n * Hook\n * -----------------------------------------------------------------------------------------------*/\n\nconst useAutoReloadOverlayBlocker = () => React.useContext(AutoReloadOverlayBlockerContext);\n\nexport { AutoReloadOverlayBlockerProvider, useAutoReloadOverlayBlocker };\n", "import { PayloadAction } from '@reduxjs/toolkit';\nimport merge from 'lodash/merge';\nimport omit from 'lodash/omit';\n\nimport { getRelationType } from '../../utils/getRelationType';\nimport { makeUnique } from '../../utils/makeUnique';\n\nimport { createUndoRedoSlice } from './undoRedo';\nimport { formatSchema } from './utils/formatSchemas';\n\nimport type {\n  Components,\n  ContentTypes,\n  ContentType,\n  Component,\n  Status,\n  AnyAttribute,\n} from '../../types';\nimport type { Internal, Schema, Struct, UID } from '@strapi/types';\n\nexport interface DataManagerStateType {\n  components: Components;\n  initialComponents: Components;\n  contentTypes: ContentTypes;\n  initialContentTypes: ContentTypes;\n  reservedNames: {\n    models: string[];\n    attributes: string[];\n  };\n  isLoading: boolean;\n  [key: string]: any;\n}\n\nconst initialState: DataManagerStateType = {\n  components: {},\n  contentTypes: {},\n  initialComponents: {},\n  initialContentTypes: {},\n  reservedNames: {\n    models: [],\n    attributes: [],\n  },\n  isLoading: true,\n};\n\nconst ONE_SIDE_RELATIONS = ['oneWay', 'manyWay'];\n\nconst getOppositeRelation = (originalRelation?: Schema.Attribute.RelationKind.Any) => {\n  if (originalRelation === 'manyToOne') {\n    return 'oneToMany';\n  }\n\n  if (originalRelation === 'oneToMany') {\n    return 'manyToOne';\n  }\n\n  return originalRelation;\n};\n\nconst findAttributeIndex = (type: any, attributeToFind?: string) => {\n  return type.attributes.findIndex(({ name }: { name: string }) => name === attributeToFind);\n};\n\ntype InitPayload = {\n  components: Record<string, Component>;\n  contentTypes: Record<string, ContentType>;\n  reservedNames: DataManagerStateType['reservedNames'];\n};\n\ntype AddAttributePayload = {\n  attributeToSet: Record<string, any>;\n  forTarget: Struct.ModelType;\n  targetUid: string;\n};\n\ntype AddCreateComponentToDynamicZonePayload = {\n  forTarget: Struct.ModelType;\n  targetUid: string;\n  dynamicZoneTarget: string;\n  componentsToAdd: Internal.UID.Component[];\n};\n\ntype AddCustomFieldAttributePayload = {\n  attributeToSet: Record<string, any>;\n  forTarget: Struct.ModelType;\n  targetUid: string;\n};\n\ntype ChangeDynamicZoneComponentsPayload = {\n  dynamicZoneTarget: string;\n  newComponents: Internal.UID.Component[];\n  forTarget: Struct.ModelType;\n  targetUid: string;\n};\n\ntype CreateComponentSchemaPayload = {\n  uid: string;\n  data: {\n    icon: string;\n    displayName: string;\n  };\n  componentCategory: string;\n};\n\ntype CreateSchemaPayload = {\n  uid: string;\n  data: {\n    displayName: string;\n    singularName: string;\n    pluralName: string;\n    kind: Struct.ContentTypeKind;\n    draftAndPublish: boolean;\n    pluginOptions: Record<string, any>;\n  };\n};\n\ntype EditAttributePayload = {\n  attributeToSet: Record<string, any>;\n  forTarget: Struct.ModelType;\n  targetUid: string;\n  name: string;\n};\n\ntype EditCustomFieldAttributePayload = {\n  attributeToSet: Record<string, any>;\n  forTarget: Struct.ModelType;\n  targetUid: string;\n  name: string;\n};\n\ntype RemoveComponentFromDynamicZonePayload = {\n  forTarget: Struct.ModelType;\n  targetUid: string;\n  dzName: string;\n  componentToRemoveIndex: number;\n};\n\ntype RemoveFieldPayload = {\n  forTarget: Struct.ModelType;\n  targetUid: string;\n  attributeToRemoveName: string;\n};\n\ntype UpdateComponentSchemaPayload = {\n  data: {\n    icon: string;\n    displayName: string;\n  };\n  uid: Internal.UID.Component;\n};\n\ntype UpdateComponentUIDPayload = {\n  uid: Internal.UID.Component;\n  newComponentUID: Internal.UID.Component;\n};\n\ntype UpdateSchemaPayload = {\n  data: {\n    displayName: string;\n    kind: Struct.ContentTypeKind;\n    draftAndPublish: boolean;\n    pluginOptions: Record<string, any>;\n  };\n  uid: string;\n};\n\ntype MoveAttributePayload = {\n  forTarget: Struct.ModelType;\n  targetUid: string;\n  from: number;\n  to: number;\n};\n\nconst getType = (\n  state: DataManagerStateType,\n  {\n    forTarget,\n    targetUid,\n  }: {\n    forTarget: Struct.ModelType;\n    targetUid: string;\n  }\n) => {\n  return forTarget === 'contentType' ? state.contentTypes[targetUid] : state.components[targetUid];\n};\n\n// TODO: use initial state when chnaging back to the initial state without knowing\nconst setStatus = (type: ContentType | Component, status: Status) => {\n  switch (type.status) {\n    case 'NEW':\n    case 'REMOVED': {\n      break;\n    }\n    default: {\n      type.status = status;\n    }\n  }\n};\n\nconst getNewStatus = (oldStatus: Status | undefined, newStatus: Status) => {\n  if (oldStatus === 'NEW' || oldStatus === 'REMOVED') {\n    return oldStatus;\n  }\n\n  return newStatus;\n};\n\nconst setAttributeStatus = (attribute: Record<string, any>, status: Status) => {\n  attribute.status = getNewStatus(attribute.status, status);\n};\n\nconst createAttribute = (properties: Record<string, any>): AnyAttribute => {\n  return {\n    ...properties,\n    status: 'NEW',\n  } as AnyAttribute;\n};\n\nconst setAttributeAt = (type: ContentType | Component, index: number, attribute: AnyAttribute) => {\n  const previousAttribute = type.attributes[index];\n\n  const newStatus = getNewStatus(previousAttribute.status, 'CHANGED');\n\n  type.attributes[index] = {\n    ...attribute,\n    status: newStatus,\n  };\n\n  setStatus(type, 'CHANGED');\n};\n\nconst pushAttribute = (type: ContentType | Component, attribute: AnyAttribute) => {\n  type.attributes.push(attribute);\n  setStatus(type, 'CHANGED');\n};\n\nconst removeAttributeAt = (type: ContentType | Component, index: number) => {\n  const attr = type.attributes[index];\n\n  setStatus(type, 'CHANGED');\n\n  if (attr.status === 'NEW') {\n    type.attributes.splice(index, 1);\n  } else {\n    setAttributeStatus(attr, 'REMOVED');\n  }\n};\n\nconst replaceAttributeAt = (\n  type: ContentType | Component,\n  index: number,\n  attribute: AnyAttribute\n) => {\n  type.attributes[index] = attribute;\n  setStatus(type, 'CHANGED');\n};\n\nconst removeAttributeByName = (type: ContentType | Component, name: string) => {\n  const idx = type.attributes.findIndex((attr) => attr.name === name);\n\n  const attr = type.attributes[idx];\n\n  setStatus(type, 'CHANGED');\n\n  if (attr.status === 'NEW') {\n    type.attributes.splice(idx, 1);\n  } else {\n    setAttributeStatus(attr, 'REMOVED');\n  }\n};\n\nconst updateType = (type: ContentType | Component, data: Record<string, any>) => {\n  merge(type, data);\n  setStatus(type, 'CHANGED');\n};\n\nconst slice = createUndoRedoSlice(\n  {\n    name: 'data-manager',\n    initialState,\n    reducers: {\n      init: (state, action: PayloadAction<InitPayload>) => {\n        const { components, contentTypes, reservedNames } = action.payload;\n\n        state.components = components;\n        state.initialComponents = components;\n        state.initialContentTypes = contentTypes;\n        state.contentTypes = contentTypes;\n        state.reservedNames = reservedNames;\n        state.isLoading = false;\n      },\n      createComponentSchema: (state, action: PayloadAction<CreateComponentSchemaPayload>) => {\n        const { uid, data, componentCategory } = action.payload;\n\n        const newSchema: Component = {\n          uid: uid as Internal.UID.Component,\n          status: 'NEW',\n          category: componentCategory,\n          modelName: data.displayName,\n          globalId: data.displayName,\n          info: {\n            icon: data.icon,\n            displayName: data.displayName,\n          },\n          attributes: [],\n          modelType: 'component',\n        };\n\n        state.components[uid as string] = newSchema;\n      },\n      createSchema: (state, action: PayloadAction<CreateSchemaPayload>) => {\n        const { uid, data } = action.payload;\n\n        const { displayName, singularName, pluralName, kind, draftAndPublish, pluginOptions } =\n          data;\n\n        const newSchema: ContentType = {\n          uid: uid as Internal.UID.ContentType,\n          status: 'NEW',\n          visible: true,\n          modelType: 'contentType',\n          restrictRelationsTo: null,\n          attributes: [],\n          kind,\n          modelName: displayName,\n          globalId: displayName,\n          options: {\n            draftAndPublish,\n          },\n          info: {\n            displayName,\n            singularName,\n            pluralName,\n          },\n          pluginOptions,\n        };\n\n        state.contentTypes[uid] = newSchema;\n      },\n      addAttribute: (state, action: PayloadAction<AddAttributePayload>) => {\n        const { attributeToSet, forTarget, targetUid } = action.payload;\n\n        const type = getType(state, { forTarget, targetUid });\n\n        const attribute = createAttribute(omit(attributeToSet, 'createComponent'));\n\n        if (attribute.type === 'relation') {\n          const target = attribute.target;\n          const targetAttribute = attribute.targetAttribute || null;\n          const relation = attribute.relation;\n          const relationType = getRelationType(relation, targetAttribute);\n\n          const isBidirectionalRelation = !['oneWay', 'manyWay'].includes(relationType);\n\n          if (isBidirectionalRelation) {\n            const oppositeAttribute = createAttribute({\n              name: targetAttribute,\n              relation: getOppositeRelation(relationType),\n              target: type.uid,\n              targetAttribute: attribute.name,\n              type: 'relation',\n              private: attribute.private,\n            });\n\n            const targetType = getType(state, { forTarget, targetUid: target });\n            pushAttribute(targetType, oppositeAttribute);\n          }\n        }\n\n        pushAttribute(type, attribute);\n        setStatus(type, 'CHANGED');\n      },\n      moveAttribute: (state, action: PayloadAction<MoveAttributePayload>) => {\n        const { forTarget, targetUid, from, to } = action.payload;\n\n        const type = getType(state, { forTarget, targetUid });\n\n        const attribute = type.attributes[from];\n        type.attributes.splice(from, 1);\n        type.attributes.splice(to, 0, attribute);\n        setStatus(type, 'CHANGED');\n      },\n      addCustomFieldAttribute: (state, action: PayloadAction<AddCustomFieldAttributePayload>) => {\n        const { attributeToSet, forTarget, targetUid } = action.payload;\n\n        const type = getType(state, { forTarget, targetUid });\n\n        pushAttribute(type, createAttribute(attributeToSet));\n      },\n      addCreatedComponentToDynamicZone: (\n        state,\n        action: PayloadAction<AddCreateComponentToDynamicZonePayload>\n      ) => {\n        const { dynamicZoneTarget, componentsToAdd, forTarget, targetUid } = action.payload;\n\n        const type = getType(state, { forTarget, targetUid });\n\n        const dzAttributeIndex = findAttributeIndex(type, dynamicZoneTarget);\n        const attr = type.attributes[dzAttributeIndex] as Schema.Attribute.DynamicZone;\n\n        componentsToAdd.forEach((componentUid: Internal.UID.Component) => {\n          attr.components.push(componentUid);\n        });\n\n        setAttributeStatus(attr, 'CHANGED');\n        setStatus(type, 'CHANGED');\n      },\n      changeDynamicZoneComponents: (\n        state,\n        action: PayloadAction<ChangeDynamicZoneComponentsPayload>\n      ) => {\n        const { dynamicZoneTarget, newComponents, forTarget, targetUid } = action.payload;\n\n        const type = getType(state, { forTarget, targetUid });\n\n        const dzAttributeIndex = findAttributeIndex(type, dynamicZoneTarget);\n        const attr = type.attributes[dzAttributeIndex] as Schema.Attribute.DynamicZone;\n        const currentDZComponents = attr.components;\n\n        const updatedComponents = makeUnique([...currentDZComponents, ...newComponents]);\n\n        setStatus(type, 'CHANGED');\n        setAttributeStatus(attr, 'CHANGED');\n        attr.components = updatedComponents;\n      },\n      editAttribute: (state, action: PayloadAction<EditAttributePayload>) => {\n        const { name, attributeToSet, forTarget, targetUid } = action.payload;\n\n        const type = getType(state, { forTarget, targetUid });\n\n        const initialAttributeIndex = findAttributeIndex(type, name);\n\n        if (initialAttributeIndex === -1) {\n          return;\n        }\n\n        const previousAttribute = type.attributes[initialAttributeIndex];\n\n        setAttributeAt(type, initialAttributeIndex, attributeToSet as AnyAttribute);\n\n        if (previousAttribute.type !== attributeToSet.type) {\n          return;\n        }\n\n        if (previousAttribute.type !== 'relation' || attributeToSet.type !== 'relation') {\n          return;\n        }\n\n        const previousTarget = getType(state, {\n          forTarget: 'contentType',\n          targetUid: previousAttribute.target,\n        });\n        const newTarget = getType(state, {\n          forTarget: 'contentType',\n          targetUid: attributeToSet.target,\n        });\n\n        const previousTargetAttributeIndex = findAttributeIndex(\n          previousTarget,\n          previousAttribute.targetAttribute ?? ''\n        );\n\n        // remove old targetAttribute\n        if (previousAttribute.targetAttribute) {\n          removeAttributeByName(previousTarget, previousAttribute.targetAttribute);\n        }\n\n        const newRelationType = getRelationType(\n          attributeToSet.relation,\n          attributeToSet.targetAttribute\n        );\n        const isBidirectionnal = !ONE_SIDE_RELATIONS.includes(newRelationType);\n\n        if (isBidirectionnal) {\n          const newTargetAttribute = {\n            name: attributeToSet.targetAttribute,\n            type: 'relation',\n            relation: getOppositeRelation(attributeToSet.relation),\n            targetAttribute: attributeToSet.name,\n            target: type.uid,\n            private: previousAttribute.private ?? attributeToSet.private,\n            pluginOptions: previousAttribute.pluginOptions ?? attributeToSet.pluginOptions,\n            status: 'CHANGED',\n          } as AnyAttribute;\n\n          // create or recreate(at old index) targetAttribute\n          if (previousTargetAttributeIndex !== -1 && previousTarget.uid === newTarget.uid) {\n            // re-create at previousIdx if possible\n            replaceAttributeAt(newTarget, previousTargetAttributeIndex, newTargetAttribute);\n          } else {\n            pushAttribute(newTarget, {\n              ...newTargetAttribute,\n              status: 'NEW',\n            });\n          }\n        }\n      },\n      editCustomFieldAttribute: (state, action: PayloadAction<EditCustomFieldAttributePayload>) => {\n        const { forTarget, targetUid, name, attributeToSet } = action.payload;\n\n        const initialAttributeName = name;\n        const type = getType(state, { forTarget, targetUid });\n\n        const initialAttributeIndex = findAttributeIndex(type, initialAttributeName);\n\n        setAttributeAt(type, initialAttributeIndex, attributeToSet as AnyAttribute);\n      },\n      reloadPlugin: () => {\n        return initialState;\n      },\n      removeComponentFromDynamicZone: (\n        state,\n        action: PayloadAction<RemoveComponentFromDynamicZonePayload>\n      ) => {\n        const { dzName, componentToRemoveIndex, forTarget, targetUid } = action.payload;\n\n        const type =\n          forTarget === 'contentType' ? state.contentTypes[targetUid] : state.components[targetUid];\n\n        if (!type) {\n          return;\n        }\n\n        const dzAttributeIndex = findAttributeIndex(type, dzName);\n        const attr = type.attributes[dzAttributeIndex] as Schema.Attribute.DynamicZone;\n\n        setStatus(type, 'CHANGED');\n        setAttributeStatus(attr, 'CHANGED');\n        attr.components.splice(componentToRemoveIndex, 1);\n      },\n      removeField: (state, action: PayloadAction<RemoveFieldPayload>) => {\n        const { forTarget, targetUid, attributeToRemoveName } = action.payload;\n\n        const type = getType(state, { forTarget, targetUid });\n\n        const attributeToRemoveIndex = findAttributeIndex(type, attributeToRemoveName);\n        const attribute = type.attributes[attributeToRemoveIndex];\n\n        if (attribute.type === 'relation') {\n          const { target, relation, targetAttribute: targetAttributeName } = attribute;\n          const relationType = getRelationType(relation, targetAttributeName);\n\n          const isBidirectionnal = !ONE_SIDE_RELATIONS.includes(relationType!);\n\n          if (isBidirectionnal && targetAttributeName) {\n            const targetContentType = getType(state, { forTarget, targetUid: target });\n            const targetAttributeIndex = findAttributeIndex(targetContentType, targetAttributeName);\n\n            removeAttributeAt(targetContentType, targetAttributeIndex);\n          }\n        }\n\n        // Find all uid fields that have the targetField set to the field we are removing\n        type.attributes.forEach((attribute) => {\n          if (attribute.type === 'uid') {\n            if (attribute.targetField === attributeToRemoveName) {\n              delete attribute.targetField;\n            }\n          }\n        });\n\n        removeAttributeAt(type, attributeToRemoveIndex);\n      },\n      // only edits a component in practice\n      updateComponentSchema: (state, action: PayloadAction<UpdateComponentSchemaPayload>) => {\n        const { data, uid } = action.payload;\n\n        const type = state.components[uid];\n        if (!type) {\n          return;\n        }\n\n        updateType(type, {\n          info: {\n            displayName: data.displayName,\n            icon: data.icon,\n          },\n        });\n      },\n      updateComponentUid: (state, action: PayloadAction<UpdateComponentUIDPayload>) => {\n        const { newComponentUID, uid } = action.payload;\n\n        const type = state.components[uid];\n        if (!type || type.status !== 'NEW') {\n          return;\n        }\n\n        if (newComponentUID !== uid) {\n          const newType = { ...type, uid: newComponentUID };\n          state.components[newComponentUID] = newType;\n          delete state.components[uid];\n\n          // update the uid in the content types\n          Object.keys(state.contentTypes).forEach((contentTypeUid) => {\n            const contentType = state.contentTypes[contentTypeUid];\n\n            contentType.attributes.forEach((attribute) => {\n              if (attribute.type === 'dynamiczone') {\n                const newComponents = attribute.components.map((component: UID.Component) => {\n                  if (component === uid) {\n                    return newComponentUID;\n                  }\n\n                  return component;\n                });\n\n                attribute.components = newComponents;\n              }\n            });\n\n            contentType.attributes.forEach((attribute) => {\n              if (attribute.type === 'component' && attribute.component === uid) {\n                attribute.component = newComponentUID;\n              }\n            });\n          });\n\n          // update the uid in the other components\n          Object.keys(state.components).forEach((componentUid) => {\n            const component = state.components[componentUid];\n\n            component.attributes.forEach((attribute) => {\n              if (attribute.type === 'component' && attribute.component === uid) {\n                attribute.component = newComponentUID;\n              }\n            });\n          });\n        }\n      },\n      updateSchema: (state, action: PayloadAction<UpdateSchemaPayload>) => {\n        const { data, uid } = action.payload;\n\n        const { displayName, kind, draftAndPublish, pluginOptions } = data;\n\n        const type = state.contentTypes[uid];\n        if (!type) {\n          return;\n        }\n\n        updateType(type, {\n          info: {\n            displayName,\n          },\n          kind,\n          options: {\n            draftAndPublish,\n          },\n          pluginOptions,\n        });\n      },\n      deleteComponent: (state, action: PayloadAction<Internal.UID.Component>) => {\n        const uid = action.payload;\n\n        // remove the compo from the components\n        if (state.components[uid].status === 'NEW') {\n          delete state.components[uid];\n        } else {\n          setStatus(state.components[uid], 'REMOVED');\n        }\n\n        // remove the compo from the content types\n        Object.keys(state.contentTypes).forEach((contentTypeUid) => {\n          const contentType = state.contentTypes[contentTypeUid];\n\n          // remove from dynamic zones\n          contentType.attributes.forEach((attribute) => {\n            if (attribute.type === 'dynamiczone') {\n              const newComponents = attribute.components.filter(\n                (component: unknown) => component !== uid\n              );\n\n              attribute.components = newComponents;\n            }\n          });\n\n          contentType.attributes.forEach((attribute) => {\n            if (attribute.type === 'component' && attribute.component === uid) {\n              removeAttributeByName(contentType, attribute.name);\n            }\n          });\n        });\n\n        // remove the compo from other components\n        Object.keys(state.components).forEach((componentUid) => {\n          const component = state.components[componentUid];\n\n          component.attributes.forEach((attribute) => {\n            if (attribute.type === 'component' && attribute.component === uid) {\n              removeAttributeByName(component, attribute.name);\n            }\n          });\n        });\n      },\n      deleteContentType: (state, action: PayloadAction<Internal.UID.ContentType>) => {\n        const uid = action.payload;\n        const type = state.contentTypes[uid];\n\n        // just drop new content types\n        if (type.status === 'NEW') {\n          delete state.contentTypes[uid];\n        } else {\n          setStatus(type, 'REMOVED');\n        }\n\n        // remove the content type from the components\n        Object.keys(state.components).forEach((componentUid) => {\n          const component = state.components[componentUid];\n\n          component.attributes.forEach((attribute) => {\n            if (attribute.type === 'relation' && attribute.target === uid) {\n              removeAttributeByName(component, attribute.name);\n            }\n          });\n        });\n\n        // remove the content type from the content types\n        Object.keys(state.contentTypes).forEach((contentTypeUid) => {\n          const contentType = state.contentTypes[contentTypeUid];\n\n          contentType.attributes.forEach((attribute) => {\n            if (attribute.type === 'relation' && attribute.target === uid) {\n              removeAttributeByName(contentType, attribute.name);\n            }\n          });\n        });\n      },\n\n      applyChange(\n        state,\n        reducerAction: PayloadAction<{\n          action: 'add' | 'update' | 'delete';\n          schema: ContentType | Component;\n        }>\n      ) {\n        const { action, schema } = reducerAction.payload;\n\n        switch (action) {\n          case 'add': {\n            // generate a uid ?\n            const uid = schema.uid;\n\n            if (schema.modelType === 'component') {\n              state.components[uid] = {\n                ...formatSchema(schema),\n                status: 'NEW',\n              };\n            } else {\n              state.contentTypes[uid] = {\n                ...formatSchema(schema),\n                status: 'NEW',\n              };\n            }\n          }\n        }\n      },\n    },\n  },\n  {\n    limit: 50,\n    excludeActionsFromHistory: ['reloadPlugin', 'init'],\n    stateSelector: (state) => {\n      if (!state) {\n        return {};\n      }\n\n      return {\n        components: state.components,\n        contentTypes: state.contentTypes,\n      };\n    },\n    discard: (state) => {\n      state.components = state.initialComponents;\n      state.contentTypes = state.initialContentTypes;\n    },\n  }\n);\n\nexport type State = ReturnType<typeof slice.reducer>;\nexport const { reducer, actions } = slice;\nexport { initialState };\n", "const makeUnique = <T extends string>(array: T[]): T[] => [...new Set(array)];\n\nexport { makeUnique };\n", "import {\n  CaseReducer,\n  createSlice,\n  CreateSliceOptions,\n  Draft,\n  original,\n  PayloadAction,\n  SliceCaseReducers,\n} from '@reduxjs/toolkit';\n\nexport type UndoRedoState<T> = {\n  past: Array<Partial<T>>;\n  future: Array<Partial<T>>;\n  current: T;\n};\n\ntype WrappedUndoRedoReducer<TState, TReducers extends SliceCaseReducers<TState>> = {\n  [K in keyof TReducers]: TReducers[K] extends CaseReducer<TState, infer A>\n    ? CaseReducer<UndoRedoState<TState>, A>\n    : never;\n};\n\ntype UndoRedoReducer<TState, TReducers extends SliceCaseReducers<TState>> = WrappedUndoRedoReducer<\n  TState,\n  TReducers\n> & {\n  undo: CaseReducer<UndoRedoState<TState>>;\n  redo: CaseReducer<UndoRedoState<TState>>;\n  discardAll: CaseReducer<UndoRedoState<TState>>;\n  clearHistory: CaseReducer<UndoRedoState<TState>>;\n};\n\ntype Opts<TState> = {\n  limit?: number;\n  excludeActionsFromHistory?: string[];\n  stateSelector?: (state: Draft<TState> | undefined) => Draft<Partial<TState>>;\n  discard?: (state: Draft<TState>) => void;\n};\n\nconst isCallable = (obj: unknown): obj is (...args: unknown[]) => unknown => {\n  return typeof obj === 'function';\n};\n\nexport const createUndoRedoSlice = <State, CaseReducers extends SliceCaseReducers<State>>(\n  sliceOpts: CreateSliceOptions<State, CaseReducers, string>,\n  opts: Opts<State>\n) => {\n  const initialState: UndoRedoState<State> = {\n    past: [],\n    future: [],\n    current: isCallable(sliceOpts.initialState) ? sliceOpts.initialState() : sliceOpts.initialState,\n  };\n\n  const { limit = 10 } = opts ?? {};\n\n  const selector = opts.stateSelector || (<T>(state: Draft<T>): Draft<T> => state);\n\n  const wrappedReducers = Object.keys(sliceOpts.reducers).reduce(\n    (acc, actionName: string) => {\n      const reducer = sliceOpts.reducers[actionName];\n\n      if (!isCallable(reducer)) {\n        throw new Error('Reducer must be a function. prepapre not support in UndoRedo wrapper');\n      }\n\n      acc[actionName] = (state, action) => {\n        const newCurrent = reducer(state.current as Draft<State>, action);\n\n        if (opts.excludeActionsFromHistory?.includes(actionName)) {\n          if (newCurrent !== undefined) {\n            state.current = newCurrent as Draft<State>;\n          }\n\n          return;\n        }\n\n        const originalCurrent = original(state.current);\n\n        state.past.push(selector(originalCurrent)!);\n        if (state.past.length > limit) {\n          state.past.shift();\n        }\n        state.future = [];\n\n        if (newCurrent !== undefined) {\n          state.current = newCurrent as Draft<State>;\n        }\n      };\n\n      return acc;\n    },\n    {} as Record<string, CaseReducer<UndoRedoState<State>, PayloadAction<unknown>>>\n  ) as WrappedUndoRedoReducer<State, CaseReducers>;\n\n  return createSlice<UndoRedoState<State>, UndoRedoReducer<State, CaseReducers>>({\n    name: sliceOpts.name,\n    initialState,\n    // @ts-expect-error - TS doesn't like the fact that we're adding extra reducers\n    reducers: {\n      ...wrappedReducers,\n      undo: (state) => {\n        if (state.past.length === 0) {\n          return;\n        }\n\n        const previous = state.past.pop();\n\n        if (previous !== undefined) {\n          state.future = [state.current, ...state.future];\n          // reapply the previous state partially\n          // @ts-expect-error - TS doesn't like the fact that we're mutating the state\n          state.current = { ...state.current, ...previous };\n        }\n      },\n\n      redo: (state) => {\n        if (state.future.length === 0) {\n          return;\n        }\n\n        const next = state.future.shift();\n        if (next != undefined) {\n          state.past = [...state.past, state.current];\n          // reapply the previous state partially\n          // @ts-expect-error - TS doesn't like the fact that we're mutating the state\n          state.current = { ...state.current, ...next };\n        }\n      },\n\n      discardAll: (state) => {\n        if (opts.discard) {\n          opts.discard(state.current);\n        } else {\n          // @ts-expect-error - TS doesn't like the fact that we're mutating the state\n          state.current = initialState.current;\n        }\n        state.past = [];\n        state.future = [];\n      },\n\n      clearHistory: (state) => {\n        state.past = [];\n        state.future = [];\n      },\n    },\n  });\n};\n", "import { Component, ContentType, AnyAttribute } from '../../../types';\n\nexport const formatSchema = <TType extends Component | ContentType>(\n  schema: Record<string, any>\n): TType => {\n  return {\n    ...schema,\n    attributes: toAttributesArray(schema.attributes),\n  } as TType;\n};\n\nexport const toAttributesArray = (attributes: Record<string, any>) => {\n  return Object.keys(attributes).reduce((acc, current: any) => {\n    acc.push({ ...attributes[current], name: current });\n\n    return acc;\n  }, [] as AnyAttribute[]);\n};\n", "import slugify from '@sindresorhus/slugify';\n\nexport const nameToSlug = (name: string) => slugify(name, { separator: '-' });\n", "import { nameToSlug } from '../../../utils/nameToSlug';\n\nimport type { Internal } from '@strapi/types';\n\nconst createUid = (name: string): Internal.UID.ContentType => {\n  const modelName = nameToSlug(name);\n  return `api::${modelName}.${modelName}`;\n};\n\n// From `content-type-builder/services/Components/createComponentUid`\nconst createComponentUid = (name: string, category: string): Internal.UID.Component => {\n  return `${nameToSlug(category)}.${nameToSlug(name)}`;\n};\n\nexport { createComponentUid, createUid };\n", "import { createSlice, type PayloadAction } from '@reduxjs/toolkit';\nimport set from 'lodash/set';\nimport snakeCase from 'lodash/snakeCase';\nimport pluralize from 'pluralize';\n\nimport { getRelationType } from '../../utils/getRelationType';\nimport { nameToSlug } from '../../utils/nameToSlug';\n\nimport { createComponentUid } from './utils/createUid';\nimport { customFieldDefaultOptionsReducer } from './utils/customFieldDefaultOptionsReducer';\nimport { shouldPluralizeName, shouldPluralizeTargetAttribute } from './utils/relations';\n\nimport type { Schema, UID } from '@strapi/types';\n\nexport type State = {\n  formErrors: Record<string, any>;\n  modifiedData: Record<string, any>;\n  initialData: Record<string, any>;\n  componentToCreate: Record<string, any>;\n  isCreatingComponentWhileAddingAField: boolean;\n};\n\nconst initialState: State = {\n  formErrors: {},\n  modifiedData: {},\n  initialData: {},\n  componentToCreate: {},\n  isCreatingComponentWhileAddingAField: false,\n};\n\ntype OnChangePayload = {\n  keys: string[];\n  value: any;\n};\n\ntype OnChangeRelationTargetPayload = {\n  target: {\n    oneThatIsCreatingARelationWithAnother: string;\n    selectedContentTypeFriendlyName: string;\n    targetContentTypeAllowedRelations: Schema.Attribute.RelationKind.Any[] | null;\n    value: string;\n  };\n};\n\ntype OnChangeRelationTypePayload = {\n  target: {\n    oneThatIsCreatingARelationWithAnother: string;\n    value: Schema.Attribute.RelationKind.Any;\n  };\n};\n\ntype ResetPropsAndSetFormForAddingAnExistingCompoPayload = {\n  uid: UID.Schema;\n  options?: Record<string, any>;\n};\n\ntype ResetPropsAndSaveCurrentDataPayload = {\n  uid: UID.Schema;\n  options?: Record<string, any>;\n};\n\ntype SetDataToEditPayload = {\n  data: Record<string, any>;\n};\n\ntype SetAttributeDataSchemaPayload =\n  | {\n      isEditing: true;\n      modifiedDataToSetForEditing: Record<string, any>;\n      uid: UID.Schema;\n    }\n  | {\n      isEditing: false;\n      modifiedDataToSetForEditing: Record<string, any>;\n      attributeType: string;\n      nameToSetForRelation: string;\n      targetUid: string;\n      step: string | null;\n      options?: Record<string, any>;\n      uid: UID.Schema;\n    };\n\ntype SetCustomFieldDataSchemaPayload =\n  | {\n      isEditing: true;\n      modifiedDataToSetForEditing: Record<string, any>;\n      uid: UID.Schema;\n    }\n  | {\n      isEditing: false;\n      modifiedDataToSetForEditing: Record<string, any>;\n      customField: Record<string, any>;\n      options?: Record<string, any>;\n      uid: UID.Schema;\n    };\n\ntype SetDynamicZoneDataSchemaPayload = {\n  attributeToEdit: Record<string, any>;\n};\n\ntype SetErrorsPayload = {\n  errors: Record<string, any>;\n};\n\nconst slice = createSlice({\n  name: 'formModal',\n  initialState,\n  reducers: {\n    onChange: (state, action: PayloadAction<OnChangePayload>) => {\n      const { keys, value } = action.payload;\n      const obj = state.modifiedData;\n      const hasDefaultValue = Boolean(obj.default);\n\n      // There is no need to remove the default key if the default value isn't defined\n      if (hasDefaultValue && keys.length === 1 && keys.includes('type')) {\n        const previousType = obj.type;\n\n        if (previousType && ['date', 'datetime', 'time'].includes(previousType)) {\n          // return obj.updateIn(keys, () => value).remove('default');\n          delete state.modifiedData.default;\n        }\n      }\n\n      set(state, ['modifiedData', ...keys], value);\n    },\n    onChangeRelationTarget: (state, action: PayloadAction<OnChangeRelationTargetPayload>) => {\n      const {\n        target: {\n          oneThatIsCreatingARelationWithAnother,\n          selectedContentTypeFriendlyName,\n          targetContentTypeAllowedRelations,\n          value,\n        },\n      } = action.payload;\n      // Special case for the admin user...\n      let didChangeRelationTypeBecauseOfRestrictedRelation = false;\n      let changedRelationType: Schema.Attribute.RelationKind.Any | null = null;\n\n      set(state, ['modifiedData', 'target'], value);\n\n      const modifiedData = state.modifiedData;\n\n      // Don't change the relation type if the allowed relations are not restricted\n      // TODO: replace with an obj { relation: 'x', bidirctional: true|false } when BE ready\n      if (Array.isArray(targetContentTypeAllowedRelations)) {\n        const currentRelationType = getRelationType(\n          modifiedData.relation,\n          modifiedData.targetAttribute\n        );\n\n        if (\n          currentRelationType &&\n          !targetContentTypeAllowedRelations.includes(currentRelationType)\n        ) {\n          const relationToSet = targetContentTypeAllowedRelations[0];\n          didChangeRelationTypeBecauseOfRestrictedRelation = true;\n          changedRelationType = relationToSet;\n\n          if (relationToSet === 'oneWay') {\n            set(state, ['modifiedData', 'relation'], 'oneToOne');\n          } else if (relationToSet === 'manyWay') {\n            set(state, ['modifiedData', 'relation'], 'oneToMany');\n          } else {\n            set(state, ['modifiedData', 'relation'], relationToSet);\n          }\n        }\n      }\n\n      let nameToSet: string;\n\n      if (didChangeRelationTypeBecauseOfRestrictedRelation && changedRelationType) {\n        nameToSet = pluralize(\n          snakeCase(nameToSlug(selectedContentTypeFriendlyName)),\n          shouldPluralizeName(changedRelationType)\n        );\n      } else {\n        nameToSet = pluralize(\n          snakeCase(nameToSlug(selectedContentTypeFriendlyName)),\n\n          shouldPluralizeName(modifiedData.relation)\n        );\n      }\n\n      set(state, ['modifiedData', 'name'], nameToSet);\n\n      const currentTargetAttribute = state.modifiedData.targetAttribute;\n\n      if (currentTargetAttribute === null) {\n        return;\n      }\n\n      // Changing the target and the relation is either oneWay or manyWay\n      // Case when we need to change the relation to oneWay (ex: admin user)\n      if (\n        didChangeRelationTypeBecauseOfRestrictedRelation &&\n        changedRelationType &&\n        ['oneWay', 'manyWay'].includes(changedRelationType)\n      ) {\n        set(state, ['modifiedData', 'targetAttribute'], null);\n\n        return;\n      }\n\n      const targetAttributeToSet = pluralize(\n        snakeCase(nameToSlug(oneThatIsCreatingARelationWithAnother)),\n        shouldPluralizeTargetAttribute(modifiedData.relation)\n      );\n\n      set(state, ['modifiedData', 'targetAttribute'], targetAttributeToSet);\n    },\n    onChangeRelationType: (state, action: PayloadAction<OnChangeRelationTypePayload>) => {\n      const {\n        target: { oneThatIsCreatingARelationWithAnother, value },\n      } = action.payload;\n\n      const currentName = state.modifiedData.name;\n\n      // Switching from oneWay\n      if (!['oneWay', 'manyWay'].includes(value)) {\n        set(state, ['modifiedData', 'relation'], value);\n        const currentTargetAttribute = state.modifiedData.targetAttribute;\n\n        set(\n          state,\n          ['modifiedData', 'name'],\n          pluralize(snakeCase(nameToSlug(currentName)), shouldPluralizeName(value))\n        );\n\n        set(\n          state,\n          ['modifiedData', 'targetAttribute'],\n          pluralize(\n            currentTargetAttribute || snakeCase(nameToSlug(oneThatIsCreatingARelationWithAnother)),\n            shouldPluralizeTargetAttribute(value)\n          )\n        );\n\n        return;\n      }\n\n      if (value === 'oneWay') {\n        set(state, ['modifiedData', 'relation'], 'oneToOne');\n        set(state, ['modifiedData', 'targetAttribute'], null);\n        set(state, ['modifiedData', 'name'], pluralize(snakeCase(currentName), 1));\n\n        return;\n      }\n\n      // manyWay\n      set(state, ['modifiedData', 'relation'], 'oneToMany');\n      set(state, ['modifiedData', 'targetAttribute'], null);\n      set(state, ['modifiedData', 'name'], pluralize(snakeCase(currentName), 2));\n    },\n    resetProps: () => {\n      return initialState;\n    },\n    resetPropsAndSetFormForAddingAnExistingCompo: (\n      state,\n      action: PayloadAction<ResetPropsAndSetFormForAddingAnExistingCompoPayload>\n    ) => {\n      const { options = {} } = action.payload;\n\n      return {\n        ...initialState,\n        modifiedData: {\n          type: 'component',\n          repeatable: true,\n          ...options,\n        },\n      };\n    },\n    resetPropsAndSaveCurrentData: (\n      state,\n      action: PayloadAction<ResetPropsAndSaveCurrentDataPayload>\n    ) => {\n      const { options = {} } = action.payload;\n      // This is run when the user has created a new component\n      const componentToCreate = state.modifiedData.componentToCreate;\n      const modifiedData = {\n        displayName: componentToCreate.displayName,\n        type: 'component',\n        repeatable: false,\n        ...options,\n        component: createComponentUid(componentToCreate.displayName, componentToCreate.category),\n      };\n\n      return {\n        ...initialState,\n        componentToCreate,\n        modifiedData,\n        isCreatingComponentWhileAddingAField: state.modifiedData.createComponent,\n      };\n    },\n    resetPropsAndSetTheFormForAddingACompoToADz: (state) => {\n      const createdDZ = state.modifiedData;\n      const dataToSet = {\n        ...createdDZ,\n        createComponent: true,\n        componentToCreate: { type: 'component' },\n      };\n\n      return { ...initialState, modifiedData: dataToSet };\n    },\n    setDataToEdit: (state, action: PayloadAction<SetDataToEditPayload>) => {\n      const { data } = action.payload;\n      state.modifiedData = data;\n      state.initialData = data;\n    },\n    setAttributeDataSchema: (state, action: PayloadAction<SetAttributeDataSchemaPayload>) => {\n      const { isEditing } = action.payload;\n\n      if (isEditing === true) {\n        const { modifiedDataToSetForEditing } = action.payload;\n        state.modifiedData = modifiedDataToSetForEditing;\n        state.initialData = modifiedDataToSetForEditing;\n\n        return;\n      }\n\n      const { attributeType, nameToSetForRelation, targetUid, step, options = {} } = action.payload;\n\n      let dataToSet;\n\n      if (attributeType === 'component') {\n        if (step === '1') {\n          dataToSet = {\n            type: 'component',\n            createComponent: true,\n            componentToCreate: { type: 'component' },\n          };\n        } else {\n          dataToSet = {\n            ...options,\n            type: 'component',\n            repeatable: true,\n          };\n        }\n      } else if (attributeType === 'dynamiczone') {\n        dataToSet = {\n          ...options,\n          type: 'dynamiczone',\n          components: [],\n        };\n      } else if (attributeType === 'text') {\n        dataToSet = { ...options, type: 'string' };\n      } else if (attributeType === 'number' || attributeType === 'date') {\n        dataToSet = options;\n      } else if (attributeType === 'media') {\n        dataToSet = {\n          allowedTypes: ['images', 'files', 'videos', 'audios'],\n          type: 'media',\n          multiple: true,\n          ...options,\n        };\n      } else if (attributeType === 'enumeration') {\n        dataToSet = { ...options, type: 'enumeration', enum: [] };\n      } else if (attributeType === 'relation') {\n        dataToSet = {\n          name: snakeCase(nameToSetForRelation),\n          relation: 'oneToOne',\n          targetAttribute: null,\n          target: targetUid,\n          type: 'relation',\n        };\n      } else {\n        dataToSet = { ...options, type: attributeType, default: null };\n      }\n\n      state.modifiedData = dataToSet;\n    },\n    setCustomFieldDataSchema: (state, action: PayloadAction<SetCustomFieldDataSchemaPayload>) => {\n      const { payload } = action;\n\n      if (payload.isEditing === true) {\n        const { modifiedDataToSetForEditing } = action.payload;\n        state.modifiedData = modifiedDataToSetForEditing;\n        state.initialData = modifiedDataToSetForEditing;\n\n        return;\n      }\n\n      const { customField, options = {} } = payload;\n\n      state.modifiedData = { ...options, type: customField.type };\n\n      const allOptions = [\n        ...(customField?.options?.base || []),\n        ...(customField?.options?.advanced || []),\n      ];\n\n      const optionDefaults = allOptions.reduce(customFieldDefaultOptionsReducer, []);\n\n      if (optionDefaults.length) {\n        optionDefaults.forEach(({ name, defaultValue }: { name: string; defaultValue: string }) =>\n          set(state.modifiedData, name, defaultValue)\n        );\n      }\n    },\n    setDynamicZoneDataSchema: (state, action: PayloadAction<SetDynamicZoneDataSchemaPayload>) => {\n      const { attributeToEdit } = action.payload;\n      state.modifiedData = attributeToEdit;\n      state.initialData = attributeToEdit;\n    },\n    setErrors: (state, action: PayloadAction<SetErrorsPayload>) => {\n      state.formErrors = action.payload.errors;\n    },\n  },\n});\n\nexport { initialState };\nexport const { actions, reducer } = slice;\n", "export const customFieldDefaultOptionsReducer = (acc: any, option: any) => {\n  if (option.items) {\n    return option.items.reduce(customFieldDefaultOptionsReducer, acc);\n  }\n\n  if ('defaultValue' in option) {\n    const { name, defaultValue } = option;\n    acc.push({ name, defaultValue });\n  }\n\n  return acc;\n};\n", "/* eslint-disable no-confusing-arrow */\n\nimport type { Schema } from '@strapi/types';\n\nconst shouldPluralizeName = (nature: Schema.Attribute.RelationKind.Any) =>\n  ['manyToMany', 'oneToMany', 'manyWay'].includes(nature) ? 2 : 1;\n\nconst shouldPluralizeTargetAttribute = (nature: Schema.Attribute.RelationKind.Any) =>\n  ['manyToMany', 'manyToOne'].includes(nature) ? 2 : 1;\n\nexport { shouldPluralizeName, shouldPluralizeTargetAttribute };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAUA,QAAI,WAAW,IAAI;AAGnB,QAAI,YAAY;AAGhB,QAAI,UAAU;AAGd,QAAI,oBAAoB;AAAxB,QACI,sBAAsB;AAG1B,QAAI,UAAU,MAAM,oBAAoB,sBAAsB;AAM9D,QAAI,cAAc,OAAO,SAAS,GAAG;AAGrC,QAAI,kBAAkB;AAAA;AAAA,MAEpB,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAC1E,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAC1E,KAAQ;AAAA,MAAM,KAAQ;AAAA,MACtB,KAAQ;AAAA,MAAM,KAAQ;AAAA,MACtB,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MACtB,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAC1E,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAC1E,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MACnC,KAAQ;AAAA,MAAM,KAAQ;AAAA,MACtB,KAAQ;AAAA,MAAM,KAAQ;AAAA,MACtB,KAAQ;AAAA;AAAA,MAER,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAC1B,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAA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",
  "names": ["require_escape_string_regexp", "slugify", "counter", "config", "initialState", "reducer", "attr", "merge", "omit", "attribute", "slugify", "initialState", "slice", "set", "pluralize", "snakeCase", "actions", "reducer", "slice"]
}
