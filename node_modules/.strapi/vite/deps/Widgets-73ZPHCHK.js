import {
  RelativeTime
} from "./chunk-75PVAPT3.js";
import {
  getDefaultMessage,
  useGetAuditLogsQuery
} from "./chunk-WRPCO662.js";
import "./chunk-4JEMFY4B.js";
import "./chunk-P4MW56JB.js";
import "./chunk-MXUJETMG.js";
import "./chunk-ILTK455Q.js";
import {
  Widget
} from "./chunk-JVLPB7TF.js";
import "./chunk-UIAWNFPX.js";
import "./chunk-7PUUZZBB.js";
import "./chunk-OHBWTDYV.js";
import "./chunk-6LEA5NNP.js";
import "./chunk-ZJ3Q2ZXE.js";
import {
  AUDIT_LOGS_DEFAULT_PAGE_SIZE
} from "./chunk-TZLCSQ7D.js";
import "./chunk-4Z4ICZDS.js";
import "./chunk-5YGMMZHP.js";
import "./chunk-XWWS33TK.js";
import "./chunk-MOVIDLV3.js";
import "./chunk-MMFIWMIJ.js";
import "./chunk-VPZPUWHH.js";
import "./chunk-SHHZGTRU.js";
import "./chunk-7R3IEP5O.js";
import "./chunk-DTPLHC4Y.js";
import "./chunk-PZ6PIJ5R.js";
import "./chunk-BALFEYRP.js";
import "./chunk-GJKFT6EX.js";
import "./chunk-HP6PMHBS.js";
import "./chunk-QP5S5OPY.js";
import "./chunk-LVJ5LIPC.js";
import "./chunk-6VU4ULW6.js";
import "./chunk-NZF6ERMF.js";
import "./chunk-KU3X5RH2.js";
import "./chunk-MZOBPZQ3.js";
import "./chunk-GTK7A75H.js";
import "./chunk-6QQ5Y257.js";
import "./chunk-MXOCLXDI.js";
import "./chunk-JTVP57KZ.js";
import "./chunk-BR5DWYPY.js";
import "./chunk-PM2LZIAE.js";
import "./chunk-H5MBP66A.js";
import "./chunk-53SLEXFN.js";
import "./chunk-FMI7IV2L.js";
import "./chunk-CLBB5XWA.js";
import {
  useTracking
} from "./chunk-X755HR2R.js";
import "./chunk-BC6C3P2K.js";
import "./chunk-5RZ6LKW6.js";
import "./chunk-DJ2H7J6F.js";
import "./chunk-KYOQACZ3.js";
import "./chunk-GH6VCESI.js";
import {
  useQueryParams
} from "./chunk-Q5ERACUA.js";
import "./chunk-N64PMPD5.js";
import "./chunk-5BKV6XT7.js";
import "./chunk-ZOFH3G6M.js";
import "./chunk-T53VNMA3.js";
import "./chunk-NLF5ZJ7G.js";
import "./chunk-FFDAF6WU.js";
import "./chunk-LJ3JYJIM.js";
import "./chunk-SPCPB6JM.js";
import {
  Box,
  IconButton,
  Table,
  Tbody,
  Td,
  Tr,
  Typography,
  useIntl
} from "./chunk-DOD64YWE.js";
import "./chunk-75I5DWRQ.js";
import {
  Link,
  useNavigate
} from "./chunk-QOSJGLB6.js";
import "./chunk-47RN6QNY.js";
import {
  ForwardRef$3L
} from "./chunk-UZEUHNNF.js";
import {
  require_jsx_runtime
} from "./chunk-GAPF2DTI.js";
import {
  dt
} from "./chunk-FJZ2NJT6.js";
import "./chunk-2ZN62OJX.js";
import {
  __toESM
} from "./chunk-X6GFWOGJ.js";

// ../packages/core/admin/ee/admin/src/components/AuditLogs/Widgets.tsx
var import_jsx_runtime = __toESM(require_jsx_runtime());
var RelativeTime2 = dt(RelativeTime)`
  display: inline-block;

  &::first-letter {
    text-transform: uppercase;
  }
`;
var LastActivityTable = ({ items }) => {
  const { formatMessage } = useIntl();
  const { trackUsage } = useTracking();
  const navigate = useNavigate();
  const getAuditLogDetailsLink = (item) => {
    return `/settings/audit-logs?pageSize=${AUDIT_LOGS_DEFAULT_PAGE_SIZE}&page=1&sort=date:DESC&id=${item.id}`;
  };
  const handleRowClick = (document) => () => {
    trackUsage("willOpenAuditLogDetailsFromHome");
    const link = getAuditLogDetailsLink(document);
    navigate(link);
  };
  return (0, import_jsx_runtime.jsx)(Table, { colCount: 4, rowCount: (items == null ? void 0 : items.length) ?? 0, children: (0, import_jsx_runtime.jsx)(Tbody, { children: items == null ? void 0 : items.map((item) => {
    var _a;
    const action = formatMessage(
      {
        id: `Settings.permissions.auditLogs.${item.action}`,
        // @ts-expect-error â€“ getDefaultMessage probably doesn't benefit from being so strongly typed unless we just add string at the end.
        defaultMessage: getDefaultMessage(item.action)
      },
      { model: item.payload.model ?? "" }
    );
    const userDisplayName = ((_a = item.user) == null ? void 0 : _a.displayName) ?? "-";
    return (0, import_jsx_runtime.jsxs)(
      Tr,
      {
        onClick: handleRowClick(item),
        cursor: "pointer",
        children: [
          (0, import_jsx_runtime.jsx)(Td, { children: (0, import_jsx_runtime.jsx)(Typography, { title: action, variant: "omega", textColor: "neutral800", children: action }) }),
          (0, import_jsx_runtime.jsx)(Td, { children: (0, import_jsx_runtime.jsx)(Typography, { variant: "omega", textColor: "neutral800", children: (0, import_jsx_runtime.jsx)(RelativeTime2, { timestamp: new Date(item.date) }) }) }),
          (0, import_jsx_runtime.jsx)(Td, { children: (0, import_jsx_runtime.jsx)(Typography, { title: userDisplayName, variant: "omega", textColor: "neutral800", children: userDisplayName }) }),
          (0, import_jsx_runtime.jsx)(Td, { onClick: (e) => e.stopPropagation(), children: (0, import_jsx_runtime.jsx)(Box, { display: "inline-block", children: (0, import_jsx_runtime.jsx)(
            IconButton,
            {
              tag: Link,
              to: getAuditLogDetailsLink(item),
              onClick: () => trackUsage("willOpenAuditLogDetailsFromHome"),
              label: formatMessage({
                id: "global.details",
                defaultMessage: "Details"
              }),
              variant: "ghost",
              children: (0, import_jsx_runtime.jsx)(ForwardRef$3L, {})
            }
          ) }) })
        ]
      },
      `lastActivity_auditLog_${item.id}`
    );
  }) }) });
};
var AuditLogsWidget = () => {
  const { formatMessage } = useIntl();
  const [{ query }] = useQueryParams();
  const { data, isLoading, error } = useGetAuditLogsQuery(
    {
      ...query,
      page: 1,
      pageSize: 4,
      sort: "date:DESC"
    },
    {
      refetchOnMountOrArgChange: true
    }
  );
  if (isLoading) {
    return (0, import_jsx_runtime.jsx)(Widget.Loading, {});
  }
  if (error || !(data == null ? void 0 : data.results)) {
    return (0, import_jsx_runtime.jsx)(Widget.Error, {});
  }
  if (data.results.length === 0) {
    return (0, import_jsx_runtime.jsx)(Widget.NoData, { children: formatMessage({
      id: "widget.last-activity.no-activity",
      defaultMessage: "No activity"
    }) });
  }
  return (0, import_jsx_runtime.jsx)(LastActivityTable, { items: data.results ?? [] });
};
export {
  AuditLogsWidget
};
//# sourceMappingURL=Widgets-73ZPHCHK.js.map
