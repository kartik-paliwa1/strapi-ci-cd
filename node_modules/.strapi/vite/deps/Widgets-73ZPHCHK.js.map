{
  "version": 3,
  "sources": ["../../../../../packages/core/admin/ee/admin/src/components/AuditLogs/Widgets.tsx"],
  "sourcesContent": ["import { useTracking, Widget } from '@strapi/admin/strapi-admin';\nimport { Box, IconButton, Table, Tbody, Td, Tr, Typography } from '@strapi/design-system';\nimport { Eye } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { RelativeTime as BaseRelativeTime } from '../../../../../admin/src/components/RelativeTime';\nimport { useQueryParams } from '../../../../../admin/src/hooks/useQueryParams';\nimport { AuditLog } from '../../../../../shared/contracts/audit-logs';\nimport { AUDIT_LOGS_DEFAULT_PAGE_SIZE } from '../../constants';\nimport { getDefaultMessage } from '../../pages/SettingsPage/pages/AuditLogs/utils/getActionTypesDefaultMessages';\nimport { useGetAuditLogsQuery } from '../../services/auditLogs';\n\nconst RelativeTime = styled(BaseRelativeTime)`\n  display: inline-block;\n\n  &::first-letter {\n    text-transform: uppercase;\n  }\n`;\n\nconst LastActivityTable = ({ items }: { items: AuditLog[] }) => {\n  const { formatMessage } = useIntl();\n  const { trackUsage } = useTracking();\n  const navigate = useNavigate();\n\n  const getAuditLogDetailsLink = (item: AuditLog): string => {\n    return `/settings/audit-logs?pageSize=${AUDIT_LOGS_DEFAULT_PAGE_SIZE}&page=1&sort=date:DESC&id=${item.id}`;\n  };\n\n  const handleRowClick = (document: AuditLog) => () => {\n    trackUsage('willOpenAuditLogDetailsFromHome');\n    const link = getAuditLogDetailsLink(document);\n    navigate(link);\n  };\n\n  return (\n    <Table colCount={4} rowCount={items?.length ?? 0}>\n      <Tbody>\n        {items?.map((item) => {\n          const action = formatMessage(\n            {\n              id: `Settings.permissions.auditLogs.${item.action}`,\n              // @ts-expect-error â€“ getDefaultMessage probably doesn't benefit from being so strongly typed unless we just add string at the end.\n              defaultMessage: getDefaultMessage(item.action),\n            },\n            { model: (item.payload.model as string) ?? '' }\n          );\n          const userDisplayName = item.user?.displayName ?? '-';\n          return (\n            <Tr\n              onClick={handleRowClick(item)}\n              cursor=\"pointer\"\n              key={`lastActivity_auditLog_${item.id}`}\n            >\n              <Td>\n                <Typography title={action} variant=\"omega\" textColor=\"neutral800\">\n                  {action}\n                </Typography>\n              </Td>\n              <Td>\n                <Typography variant=\"omega\" textColor=\"neutral800\">\n                  <RelativeTime timestamp={new Date(item.date)} />\n                </Typography>\n              </Td>\n              <Td>\n                <Typography title={userDisplayName} variant=\"omega\" textColor=\"neutral800\">\n                  {userDisplayName}\n                </Typography>\n              </Td>\n              <Td onClick={(e) => e.stopPropagation()}>\n                <Box display=\"inline-block\">\n                  <IconButton\n                    tag={Link}\n                    to={getAuditLogDetailsLink(item)}\n                    onClick={() => trackUsage('willOpenAuditLogDetailsFromHome')}\n                    label={formatMessage({\n                      id: 'global.details',\n                      defaultMessage: 'Details',\n                    })}\n                    variant=\"ghost\"\n                  >\n                    <Eye />\n                  </IconButton>\n                </Box>\n              </Td>\n            </Tr>\n          );\n        })}\n      </Tbody>\n    </Table>\n  );\n};\n\nconst AuditLogsWidget = () => {\n  const { formatMessage } = useIntl();\n  const [{ query }] = useQueryParams();\n  const { data, isLoading, error } = useGetAuditLogsQuery(\n    {\n      ...query,\n      page: 1,\n      pageSize: 4,\n      sort: 'date:DESC',\n    },\n    {\n      refetchOnMountOrArgChange: true,\n    }\n  );\n\n  if (isLoading) {\n    return <Widget.Loading />;\n  }\n\n  if (error || !data?.results) {\n    return <Widget.Error />;\n  }\n\n  if (data.results.length === 0) {\n    return (\n      <Widget.NoData>\n        {formatMessage({\n          id: 'widget.last-activity.no-activity',\n          defaultMessage: 'No activity',\n        })}\n      </Widget.NoData>\n    );\n  }\n\n  return <LastActivityTable items={data.results ?? []} />;\n};\n\nexport { AuditLogsWidget };\n"],
  "mappings": "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",
  "names": ["RelativeTime"]
}
